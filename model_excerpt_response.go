/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// ExcerptResponse struct for ExcerptResponse
type ExcerptResponse struct {
	// Highlighted content
	Content *string `json:"content,omitempty"`
	// Location of the content in the rendered document
	SnippetId *string `json:"snippetId,omitempty"`
	// Start offset of highlighted content
	StartOffset *string `json:"startOffset,omitempty"`
	// End offset of highlighted content
	EndOffset *string `json:"endOffset,omitempty"`
}

// NewExcerptResponse instantiates a new ExcerptResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExcerptResponse() *ExcerptResponse {
	this := ExcerptResponse{}
	return &this
}

// NewExcerptResponseWithDefaults instantiates a new ExcerptResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExcerptResponseWithDefaults() *ExcerptResponse {
	this := ExcerptResponse{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ExcerptResponse) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExcerptResponse) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ExcerptResponse) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ExcerptResponse) SetContent(v string) {
	o.Content = &v
}

// GetSnippetId returns the SnippetId field value if set, zero value otherwise.
func (o *ExcerptResponse) GetSnippetId() string {
	if o == nil || o.SnippetId == nil {
		var ret string
		return ret
	}
	return *o.SnippetId
}

// GetSnippetIdOk returns a tuple with the SnippetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExcerptResponse) GetSnippetIdOk() (*string, bool) {
	if o == nil || o.SnippetId == nil {
		return nil, false
	}
	return o.SnippetId, true
}

// HasSnippetId returns a boolean if a field has been set.
func (o *ExcerptResponse) HasSnippetId() bool {
	if o != nil && o.SnippetId != nil {
		return true
	}

	return false
}

// SetSnippetId gets a reference to the given string and assigns it to the SnippetId field.
func (o *ExcerptResponse) SetSnippetId(v string) {
	o.SnippetId = &v
}

// GetStartOffset returns the StartOffset field value if set, zero value otherwise.
func (o *ExcerptResponse) GetStartOffset() string {
	if o == nil || o.StartOffset == nil {
		var ret string
		return ret
	}
	return *o.StartOffset
}

// GetStartOffsetOk returns a tuple with the StartOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExcerptResponse) GetStartOffsetOk() (*string, bool) {
	if o == nil || o.StartOffset == nil {
		return nil, false
	}
	return o.StartOffset, true
}

// HasStartOffset returns a boolean if a field has been set.
func (o *ExcerptResponse) HasStartOffset() bool {
	if o != nil && o.StartOffset != nil {
		return true
	}

	return false
}

// SetStartOffset gets a reference to the given string and assigns it to the StartOffset field.
func (o *ExcerptResponse) SetStartOffset(v string) {
	o.StartOffset = &v
}

// GetEndOffset returns the EndOffset field value if set, zero value otherwise.
func (o *ExcerptResponse) GetEndOffset() string {
	if o == nil || o.EndOffset == nil {
		var ret string
		return ret
	}
	return *o.EndOffset
}

// GetEndOffsetOk returns a tuple with the EndOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExcerptResponse) GetEndOffsetOk() (*string, bool) {
	if o == nil || o.EndOffset == nil {
		return nil, false
	}
	return o.EndOffset, true
}

// HasEndOffset returns a boolean if a field has been set.
func (o *ExcerptResponse) HasEndOffset() bool {
	if o != nil && o.EndOffset != nil {
		return true
	}

	return false
}

// SetEndOffset gets a reference to the given string and assigns it to the EndOffset field.
func (o *ExcerptResponse) SetEndOffset(v string) {
	o.EndOffset = &v
}

func (o ExcerptResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if o.SnippetId != nil {
		toSerialize["snippetId"] = o.SnippetId
	}
	if o.StartOffset != nil {
		toSerialize["startOffset"] = o.StartOffset
	}
	if o.EndOffset != nil {
		toSerialize["endOffset"] = o.EndOffset
	}
	return json.Marshal(toSerialize)
}

type NullableExcerptResponse struct {
	value *ExcerptResponse
	isSet bool
}

func (v NullableExcerptResponse) Get() *ExcerptResponse {
	return v.value
}

func (v *NullableExcerptResponse) Set(val *ExcerptResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableExcerptResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableExcerptResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExcerptResponse(val *ExcerptResponse) *NullableExcerptResponse {
	return &NullableExcerptResponse{value: val, isSet: true}
}

func (v NullableExcerptResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExcerptResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


