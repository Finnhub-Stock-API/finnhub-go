/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// InFilingResponse struct for InFilingResponse
type InFilingResponse struct {
	// Filing Id in Alpharesearch platform
	FilingId *string `json:"filingId,omitempty"`
	// Filing title
	Title *string `json:"title,omitempty"`
	// Id of the entity submitted the filing
	FilerId *string `json:"filerId,omitempty"`
	// List of symbol associate with this filing
	Symbol *map[string]interface{} `json:"symbol,omitempty"`
	// Filer name
	Name *string `json:"name,omitempty"`
	// Date the filing is submitted.
	AcceptanceDate *string `json:"acceptanceDate,omitempty"`
	// Date the filing is make available to the public
	FiledDate *string `json:"filedDate,omitempty"`
	// Date as which the filing is reported
	ReportDate *string `json:"reportDate,omitempty"`
	// Filing Form
	Form *string `json:"form,omitempty"`
	// Amendment
	Amend *bool `json:"amend,omitempty"`
	// Filing Source
	Source *string `json:"source,omitempty"`
	// Estimate number of page when printing
	PageCount *int32 `json:"pageCount,omitempty"`
	// Number of document in this filing
	DocumentCount *int32 `json:"documentCount,omitempty"`
	// Document for this filing.
	Documents *[]DocumentResponse `json:"documents,omitempty"`
}

// NewInFilingResponse instantiates a new InFilingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInFilingResponse() *InFilingResponse {
	this := InFilingResponse{}
	return &this
}

// NewInFilingResponseWithDefaults instantiates a new InFilingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInFilingResponseWithDefaults() *InFilingResponse {
	this := InFilingResponse{}
	return &this
}

// GetFilingId returns the FilingId field value if set, zero value otherwise.
func (o *InFilingResponse) GetFilingId() string {
	if o == nil || o.FilingId == nil {
		var ret string
		return ret
	}
	return *o.FilingId
}

// GetFilingIdOk returns a tuple with the FilingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InFilingResponse) GetFilingIdOk() (*string, bool) {
	if o == nil || o.FilingId == nil {
		return nil, false
	}
	return o.FilingId, true
}

// HasFilingId returns a boolean if a field has been set.
func (o *InFilingResponse) HasFilingId() bool {
	if o != nil && o.FilingId != nil {
		return true
	}

	return false
}

// SetFilingId gets a reference to the given string and assigns it to the FilingId field.
func (o *InFilingResponse) SetFilingId(v string) {
	o.FilingId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *InFilingResponse) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InFilingResponse) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *InFilingResponse) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *InFilingResponse) SetTitle(v string) {
	o.Title = &v
}

// GetFilerId returns the FilerId field value if set, zero value otherwise.
func (o *InFilingResponse) GetFilerId() string {
	if o == nil || o.FilerId == nil {
		var ret string
		return ret
	}
	return *o.FilerId
}

// GetFilerIdOk returns a tuple with the FilerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InFilingResponse) GetFilerIdOk() (*string, bool) {
	if o == nil || o.FilerId == nil {
		return nil, false
	}
	return o.FilerId, true
}

// HasFilerId returns a boolean if a field has been set.
func (o *InFilingResponse) HasFilerId() bool {
	if o != nil && o.FilerId != nil {
		return true
	}

	return false
}

// SetFilerId gets a reference to the given string and assigns it to the FilerId field.
func (o *InFilingResponse) SetFilerId(v string) {
	o.FilerId = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *InFilingResponse) GetSymbol() map[string]interface{} {
	if o == nil || o.Symbol == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InFilingResponse) GetSymbolOk() (*map[string]interface{}, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *InFilingResponse) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given map[string]interface{} and assigns it to the Symbol field.
func (o *InFilingResponse) SetSymbol(v map[string]interface{}) {
	o.Symbol = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InFilingResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InFilingResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InFilingResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InFilingResponse) SetName(v string) {
	o.Name = &v
}

// GetAcceptanceDate returns the AcceptanceDate field value if set, zero value otherwise.
func (o *InFilingResponse) GetAcceptanceDate() string {
	if o == nil || o.AcceptanceDate == nil {
		var ret string
		return ret
	}
	return *o.AcceptanceDate
}

// GetAcceptanceDateOk returns a tuple with the AcceptanceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InFilingResponse) GetAcceptanceDateOk() (*string, bool) {
	if o == nil || o.AcceptanceDate == nil {
		return nil, false
	}
	return o.AcceptanceDate, true
}

// HasAcceptanceDate returns a boolean if a field has been set.
func (o *InFilingResponse) HasAcceptanceDate() bool {
	if o != nil && o.AcceptanceDate != nil {
		return true
	}

	return false
}

// SetAcceptanceDate gets a reference to the given string and assigns it to the AcceptanceDate field.
func (o *InFilingResponse) SetAcceptanceDate(v string) {
	o.AcceptanceDate = &v
}

// GetFiledDate returns the FiledDate field value if set, zero value otherwise.
func (o *InFilingResponse) GetFiledDate() string {
	if o == nil || o.FiledDate == nil {
		var ret string
		return ret
	}
	return *o.FiledDate
}

// GetFiledDateOk returns a tuple with the FiledDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InFilingResponse) GetFiledDateOk() (*string, bool) {
	if o == nil || o.FiledDate == nil {
		return nil, false
	}
	return o.FiledDate, true
}

// HasFiledDate returns a boolean if a field has been set.
func (o *InFilingResponse) HasFiledDate() bool {
	if o != nil && o.FiledDate != nil {
		return true
	}

	return false
}

// SetFiledDate gets a reference to the given string and assigns it to the FiledDate field.
func (o *InFilingResponse) SetFiledDate(v string) {
	o.FiledDate = &v
}

// GetReportDate returns the ReportDate field value if set, zero value otherwise.
func (o *InFilingResponse) GetReportDate() string {
	if o == nil || o.ReportDate == nil {
		var ret string
		return ret
	}
	return *o.ReportDate
}

// GetReportDateOk returns a tuple with the ReportDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InFilingResponse) GetReportDateOk() (*string, bool) {
	if o == nil || o.ReportDate == nil {
		return nil, false
	}
	return o.ReportDate, true
}

// HasReportDate returns a boolean if a field has been set.
func (o *InFilingResponse) HasReportDate() bool {
	if o != nil && o.ReportDate != nil {
		return true
	}

	return false
}

// SetReportDate gets a reference to the given string and assigns it to the ReportDate field.
func (o *InFilingResponse) SetReportDate(v string) {
	o.ReportDate = &v
}

// GetForm returns the Form field value if set, zero value otherwise.
func (o *InFilingResponse) GetForm() string {
	if o == nil || o.Form == nil {
		var ret string
		return ret
	}
	return *o.Form
}

// GetFormOk returns a tuple with the Form field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InFilingResponse) GetFormOk() (*string, bool) {
	if o == nil || o.Form == nil {
		return nil, false
	}
	return o.Form, true
}

// HasForm returns a boolean if a field has been set.
func (o *InFilingResponse) HasForm() bool {
	if o != nil && o.Form != nil {
		return true
	}

	return false
}

// SetForm gets a reference to the given string and assigns it to the Form field.
func (o *InFilingResponse) SetForm(v string) {
	o.Form = &v
}

// GetAmend returns the Amend field value if set, zero value otherwise.
func (o *InFilingResponse) GetAmend() bool {
	if o == nil || o.Amend == nil {
		var ret bool
		return ret
	}
	return *o.Amend
}

// GetAmendOk returns a tuple with the Amend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InFilingResponse) GetAmendOk() (*bool, bool) {
	if o == nil || o.Amend == nil {
		return nil, false
	}
	return o.Amend, true
}

// HasAmend returns a boolean if a field has been set.
func (o *InFilingResponse) HasAmend() bool {
	if o != nil && o.Amend != nil {
		return true
	}

	return false
}

// SetAmend gets a reference to the given bool and assigns it to the Amend field.
func (o *InFilingResponse) SetAmend(v bool) {
	o.Amend = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *InFilingResponse) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InFilingResponse) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *InFilingResponse) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *InFilingResponse) SetSource(v string) {
	o.Source = &v
}

// GetPageCount returns the PageCount field value if set, zero value otherwise.
func (o *InFilingResponse) GetPageCount() int32 {
	if o == nil || o.PageCount == nil {
		var ret int32
		return ret
	}
	return *o.PageCount
}

// GetPageCountOk returns a tuple with the PageCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InFilingResponse) GetPageCountOk() (*int32, bool) {
	if o == nil || o.PageCount == nil {
		return nil, false
	}
	return o.PageCount, true
}

// HasPageCount returns a boolean if a field has been set.
func (o *InFilingResponse) HasPageCount() bool {
	if o != nil && o.PageCount != nil {
		return true
	}

	return false
}

// SetPageCount gets a reference to the given int32 and assigns it to the PageCount field.
func (o *InFilingResponse) SetPageCount(v int32) {
	o.PageCount = &v
}

// GetDocumentCount returns the DocumentCount field value if set, zero value otherwise.
func (o *InFilingResponse) GetDocumentCount() int32 {
	if o == nil || o.DocumentCount == nil {
		var ret int32
		return ret
	}
	return *o.DocumentCount
}

// GetDocumentCountOk returns a tuple with the DocumentCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InFilingResponse) GetDocumentCountOk() (*int32, bool) {
	if o == nil || o.DocumentCount == nil {
		return nil, false
	}
	return o.DocumentCount, true
}

// HasDocumentCount returns a boolean if a field has been set.
func (o *InFilingResponse) HasDocumentCount() bool {
	if o != nil && o.DocumentCount != nil {
		return true
	}

	return false
}

// SetDocumentCount gets a reference to the given int32 and assigns it to the DocumentCount field.
func (o *InFilingResponse) SetDocumentCount(v int32) {
	o.DocumentCount = &v
}

// GetDocuments returns the Documents field value if set, zero value otherwise.
func (o *InFilingResponse) GetDocuments() []DocumentResponse {
	if o == nil || o.Documents == nil {
		var ret []DocumentResponse
		return ret
	}
	return *o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InFilingResponse) GetDocumentsOk() (*[]DocumentResponse, bool) {
	if o == nil || o.Documents == nil {
		return nil, false
	}
	return o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *InFilingResponse) HasDocuments() bool {
	if o != nil && o.Documents != nil {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given []DocumentResponse and assigns it to the Documents field.
func (o *InFilingResponse) SetDocuments(v []DocumentResponse) {
	o.Documents = &v
}

func (o InFilingResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FilingId != nil {
		toSerialize["filingId"] = o.FilingId
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.FilerId != nil {
		toSerialize["filerId"] = o.FilerId
	}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.AcceptanceDate != nil {
		toSerialize["acceptanceDate"] = o.AcceptanceDate
	}
	if o.FiledDate != nil {
		toSerialize["filedDate"] = o.FiledDate
	}
	if o.ReportDate != nil {
		toSerialize["reportDate"] = o.ReportDate
	}
	if o.Form != nil {
		toSerialize["form"] = o.Form
	}
	if o.Amend != nil {
		toSerialize["amend"] = o.Amend
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.PageCount != nil {
		toSerialize["pageCount"] = o.PageCount
	}
	if o.DocumentCount != nil {
		toSerialize["documentCount"] = o.DocumentCount
	}
	if o.Documents != nil {
		toSerialize["documents"] = o.Documents
	}
	return json.Marshal(toSerialize)
}

type NullableInFilingResponse struct {
	value *InFilingResponse
	isSet bool
}

func (v NullableInFilingResponse) Get() *InFilingResponse {
	return v.value
}

func (v *NullableInFilingResponse) Set(val *InFilingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInFilingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInFilingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInFilingResponse(val *InFilingResponse) *NullableInFilingResponse {
	return &NullableInFilingResponse{value: val, isSet: true}
}

func (v NullableInFilingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInFilingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


