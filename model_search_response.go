/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// SearchResponse struct for SearchResponse
type SearchResponse struct {
	// Total filing matched your search criteria.
	Count *int32 `json:"count,omitempty"`
	// Time took to execute your search query on our server, value in ms.
	Took *int32 `json:"took,omitempty"`
	// Current search page
	Page *int32 `json:"page,omitempty"`
	// Filing match your search criteria.
	Filings *[]FilingResponse `json:"filings,omitempty"`
}

// NewSearchResponse instantiates a new SearchResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchResponse() *SearchResponse {
	this := SearchResponse{}
	return &this
}

// NewSearchResponseWithDefaults instantiates a new SearchResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchResponseWithDefaults() *SearchResponse {
	this := SearchResponse{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *SearchResponse) GetCount() int32 {
	if o == nil || o.Count == nil {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponse) GetCountOk() (*int32, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *SearchResponse) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *SearchResponse) SetCount(v int32) {
	o.Count = &v
}

// GetTook returns the Took field value if set, zero value otherwise.
func (o *SearchResponse) GetTook() int32 {
	if o == nil || o.Took == nil {
		var ret int32
		return ret
	}
	return *o.Took
}

// GetTookOk returns a tuple with the Took field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponse) GetTookOk() (*int32, bool) {
	if o == nil || o.Took == nil {
		return nil, false
	}
	return o.Took, true
}

// HasTook returns a boolean if a field has been set.
func (o *SearchResponse) HasTook() bool {
	if o != nil && o.Took != nil {
		return true
	}

	return false
}

// SetTook gets a reference to the given int32 and assigns it to the Took field.
func (o *SearchResponse) SetTook(v int32) {
	o.Took = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *SearchResponse) GetPage() int32 {
	if o == nil || o.Page == nil {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponse) GetPageOk() (*int32, bool) {
	if o == nil || o.Page == nil {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *SearchResponse) HasPage() bool {
	if o != nil && o.Page != nil {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *SearchResponse) SetPage(v int32) {
	o.Page = &v
}

// GetFilings returns the Filings field value if set, zero value otherwise.
func (o *SearchResponse) GetFilings() []FilingResponse {
	if o == nil || o.Filings == nil {
		var ret []FilingResponse
		return ret
	}
	return *o.Filings
}

// GetFilingsOk returns a tuple with the Filings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponse) GetFilingsOk() (*[]FilingResponse, bool) {
	if o == nil || o.Filings == nil {
		return nil, false
	}
	return o.Filings, true
}

// HasFilings returns a boolean if a field has been set.
func (o *SearchResponse) HasFilings() bool {
	if o != nil && o.Filings != nil {
		return true
	}

	return false
}

// SetFilings gets a reference to the given []FilingResponse and assigns it to the Filings field.
func (o *SearchResponse) SetFilings(v []FilingResponse) {
	o.Filings = &v
}

func (o SearchResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.Took != nil {
		toSerialize["took"] = o.Took
	}
	if o.Page != nil {
		toSerialize["page"] = o.Page
	}
	if o.Filings != nil {
		toSerialize["filings"] = o.Filings
	}
	return json.Marshal(toSerialize)
}

type NullableSearchResponse struct {
	value *SearchResponse
	isSet bool
}

func (v NullableSearchResponse) Get() *SearchResponse {
	return v.value
}

func (v *NullableSearchResponse) Set(val *SearchResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchResponse(val *SearchResponse) *NullableSearchResponse {
	return &NullableSearchResponse{value: val, isSet: true}
}

func (v NullableSearchResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


