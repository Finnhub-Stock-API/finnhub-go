/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// EarningsCallLive struct for EarningsCallLive
type EarningsCallLive struct {
	// Array of earnings call events that support live streaming.
	Event *[]EarningsCallLiveResult `json:"event,omitempty"`
}

// NewEarningsCallLive instantiates a new EarningsCallLive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEarningsCallLive() *EarningsCallLive {
	this := EarningsCallLive{}
	return &this
}

// NewEarningsCallLiveWithDefaults instantiates a new EarningsCallLive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEarningsCallLiveWithDefaults() *EarningsCallLive {
	this := EarningsCallLive{}
	return &this
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *EarningsCallLive) GetEvent() []EarningsCallLiveResult {
	if o == nil || o.Event == nil {
		var ret []EarningsCallLiveResult
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarningsCallLive) GetEventOk() (*[]EarningsCallLiveResult, bool) {
	if o == nil || o.Event == nil {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *EarningsCallLive) HasEvent() bool {
	if o != nil && o.Event != nil {
		return true
	}

	return false
}

// SetEvent gets a reference to the given []EarningsCallLiveResult and assigns it to the Event field.
func (o *EarningsCallLive) SetEvent(v []EarningsCallLiveResult) {
	o.Event = &v
}

func (o EarningsCallLive) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Event != nil {
		toSerialize["event"] = o.Event
	}
	return json.Marshal(toSerialize)
}

type NullableEarningsCallLive struct {
	value *EarningsCallLive
	isSet bool
}

func (v NullableEarningsCallLive) Get() *EarningsCallLive {
	return v.value
}

func (v *NullableEarningsCallLive) Set(val *EarningsCallLive) {
	v.value = val
	v.isSet = true
}

func (v NullableEarningsCallLive) IsSet() bool {
	return v.isSet
}

func (v *NullableEarningsCallLive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEarningsCallLive(val *EarningsCallLive) *NullableEarningsCallLive {
	return &NullableEarningsCallLive{value: val, isSet: true}
}

func (v NullableEarningsCallLive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEarningsCallLive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


