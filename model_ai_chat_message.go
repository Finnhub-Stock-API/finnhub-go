/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// AIChatMessage struct for AIChatMessage
type AIChatMessage struct {
	// Role system/user
	Role *string `json:"role,omitempty"`
	// Content
	Content *string `json:"content,omitempty"`
}

// NewAIChatMessage instantiates a new AIChatMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAIChatMessage() *AIChatMessage {
	this := AIChatMessage{}
	return &this
}

// NewAIChatMessageWithDefaults instantiates a new AIChatMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAIChatMessageWithDefaults() *AIChatMessage {
	this := AIChatMessage{}
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *AIChatMessage) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIChatMessage) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *AIChatMessage) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *AIChatMessage) SetRole(v string) {
	o.Role = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *AIChatMessage) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIChatMessage) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *AIChatMessage) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *AIChatMessage) SetContent(v string) {
	o.Content = &v
}

func (o AIChatMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	return json.Marshal(toSerialize)
}

type NullableAIChatMessage struct {
	value *AIChatMessage
	isSet bool
}

func (v NullableAIChatMessage) Get() *AIChatMessage {
	return v.value
}

func (v *NullableAIChatMessage) Set(val *AIChatMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableAIChatMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableAIChatMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAIChatMessage(val *AIChatMessage) *NullableAIChatMessage {
	return &NullableAIChatMessage{value: val, isSet: true}
}

func (v NullableAIChatMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAIChatMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


