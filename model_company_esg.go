/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// CompanyESG struct for CompanyESG
type CompanyESG struct {
	// symbol
	Symbol *string `json:"symbol,omitempty"`
	// Total ESG Score
	TotalESGScore *float32 `json:"totalESGScore,omitempty"`
	// Environment Score
	EnvironmentScore *float32 `json:"environmentScore,omitempty"`
	// Governance Score
	GovernanceScore *float32 `json:"governanceScore,omitempty"`
	// Social Score
	SocialScore *float32 `json:"socialScore,omitempty"`
	Data *map[string]interface{} `json:"data,omitempty"`
}

// NewCompanyESG instantiates a new CompanyESG object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyESG() *CompanyESG {
	this := CompanyESG{}
	return &this
}

// NewCompanyESGWithDefaults instantiates a new CompanyESG object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyESGWithDefaults() *CompanyESG {
	this := CompanyESG{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *CompanyESG) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyESG) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *CompanyESG) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *CompanyESG) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTotalESGScore returns the TotalESGScore field value if set, zero value otherwise.
func (o *CompanyESG) GetTotalESGScore() float32 {
	if o == nil || o.TotalESGScore == nil {
		var ret float32
		return ret
	}
	return *o.TotalESGScore
}

// GetTotalESGScoreOk returns a tuple with the TotalESGScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyESG) GetTotalESGScoreOk() (*float32, bool) {
	if o == nil || o.TotalESGScore == nil {
		return nil, false
	}
	return o.TotalESGScore, true
}

// HasTotalESGScore returns a boolean if a field has been set.
func (o *CompanyESG) HasTotalESGScore() bool {
	if o != nil && o.TotalESGScore != nil {
		return true
	}

	return false
}

// SetTotalESGScore gets a reference to the given float32 and assigns it to the TotalESGScore field.
func (o *CompanyESG) SetTotalESGScore(v float32) {
	o.TotalESGScore = &v
}

// GetEnvironmentScore returns the EnvironmentScore field value if set, zero value otherwise.
func (o *CompanyESG) GetEnvironmentScore() float32 {
	if o == nil || o.EnvironmentScore == nil {
		var ret float32
		return ret
	}
	return *o.EnvironmentScore
}

// GetEnvironmentScoreOk returns a tuple with the EnvironmentScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyESG) GetEnvironmentScoreOk() (*float32, bool) {
	if o == nil || o.EnvironmentScore == nil {
		return nil, false
	}
	return o.EnvironmentScore, true
}

// HasEnvironmentScore returns a boolean if a field has been set.
func (o *CompanyESG) HasEnvironmentScore() bool {
	if o != nil && o.EnvironmentScore != nil {
		return true
	}

	return false
}

// SetEnvironmentScore gets a reference to the given float32 and assigns it to the EnvironmentScore field.
func (o *CompanyESG) SetEnvironmentScore(v float32) {
	o.EnvironmentScore = &v
}

// GetGovernanceScore returns the GovernanceScore field value if set, zero value otherwise.
func (o *CompanyESG) GetGovernanceScore() float32 {
	if o == nil || o.GovernanceScore == nil {
		var ret float32
		return ret
	}
	return *o.GovernanceScore
}

// GetGovernanceScoreOk returns a tuple with the GovernanceScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyESG) GetGovernanceScoreOk() (*float32, bool) {
	if o == nil || o.GovernanceScore == nil {
		return nil, false
	}
	return o.GovernanceScore, true
}

// HasGovernanceScore returns a boolean if a field has been set.
func (o *CompanyESG) HasGovernanceScore() bool {
	if o != nil && o.GovernanceScore != nil {
		return true
	}

	return false
}

// SetGovernanceScore gets a reference to the given float32 and assigns it to the GovernanceScore field.
func (o *CompanyESG) SetGovernanceScore(v float32) {
	o.GovernanceScore = &v
}

// GetSocialScore returns the SocialScore field value if set, zero value otherwise.
func (o *CompanyESG) GetSocialScore() float32 {
	if o == nil || o.SocialScore == nil {
		var ret float32
		return ret
	}
	return *o.SocialScore
}

// GetSocialScoreOk returns a tuple with the SocialScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyESG) GetSocialScoreOk() (*float32, bool) {
	if o == nil || o.SocialScore == nil {
		return nil, false
	}
	return o.SocialScore, true
}

// HasSocialScore returns a boolean if a field has been set.
func (o *CompanyESG) HasSocialScore() bool {
	if o != nil && o.SocialScore != nil {
		return true
	}

	return false
}

// SetSocialScore gets a reference to the given float32 and assigns it to the SocialScore field.
func (o *CompanyESG) SetSocialScore(v float32) {
	o.SocialScore = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *CompanyESG) GetData() map[string]interface{} {
	if o == nil || o.Data == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyESG) GetDataOk() (*map[string]interface{}, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *CompanyESG) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *CompanyESG) SetData(v map[string]interface{}) {
	o.Data = &v
}

func (o CompanyESG) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.TotalESGScore != nil {
		toSerialize["totalESGScore"] = o.TotalESGScore
	}
	if o.EnvironmentScore != nil {
		toSerialize["environmentScore"] = o.EnvironmentScore
	}
	if o.GovernanceScore != nil {
		toSerialize["governanceScore"] = o.GovernanceScore
	}
	if o.SocialScore != nil {
		toSerialize["socialScore"] = o.SocialScore
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyESG struct {
	value *CompanyESG
	isSet bool
}

func (v NullableCompanyESG) Get() *CompanyESG {
	return v.value
}

func (v *NullableCompanyESG) Set(val *CompanyESG) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyESG) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyESG) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyESG(val *CompanyESG) *NullableCompanyESG {
	return &NullableCompanyESG{value: val, isSet: true}
}

func (v NullableCompanyESG) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyESG) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


