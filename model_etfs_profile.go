/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// ETFsProfile struct for ETFsProfile
type ETFsProfile struct {
	// Symbol.
	Symbol *string `json:"symbol,omitempty"`
	Profile *ETFProfileData `json:"profile,omitempty"`
}

// NewETFsProfile instantiates a new ETFsProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewETFsProfile() *ETFsProfile {
	this := ETFsProfile{}
	return &this
}

// NewETFsProfileWithDefaults instantiates a new ETFsProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewETFsProfileWithDefaults() *ETFsProfile {
	this := ETFsProfile{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *ETFsProfile) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETFsProfile) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *ETFsProfile) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *ETFsProfile) SetSymbol(v string) {
	o.Symbol = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *ETFsProfile) GetProfile() ETFProfileData {
	if o == nil || o.Profile == nil {
		var ret ETFProfileData
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETFsProfile) GetProfileOk() (*ETFProfileData, bool) {
	if o == nil || o.Profile == nil {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *ETFsProfile) HasProfile() bool {
	if o != nil && o.Profile != nil {
		return true
	}

	return false
}

// SetProfile gets a reference to the given ETFProfileData and assigns it to the Profile field.
func (o *ETFsProfile) SetProfile(v ETFProfileData) {
	o.Profile = &v
}

func (o ETFsProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.Profile != nil {
		toSerialize["profile"] = o.Profile
	}
	return json.Marshal(toSerialize)
}

type NullableETFsProfile struct {
	value *ETFsProfile
	isSet bool
}

func (v NullableETFsProfile) Get() *ETFsProfile {
	return v.value
}

func (v *NullableETFsProfile) Set(val *ETFsProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableETFsProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableETFsProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableETFsProfile(val *ETFsProfile) *NullableETFsProfile {
	return &NullableETFsProfile{value: val, isSet: true}
}

func (v NullableETFsProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableETFsProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


