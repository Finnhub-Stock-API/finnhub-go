/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// MarketStatus struct for MarketStatus
type MarketStatus struct {
	// Exchange.
	Exchange *string `json:"exchange,omitempty"`
	// Timezone.
	Timezone *string `json:"timezone,omitempty"`
	// Market session.
	Session *string `json:"session,omitempty"`
	// Holiday event.
	Holiday *string `json:"holiday,omitempty"`
	// Whether the market is open at the moment.
	IsOpen *bool `json:"isOpen,omitempty"`
	// Current timestamp.
	T *int64 `json:"t,omitempty"`
}

// NewMarketStatus instantiates a new MarketStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketStatus() *MarketStatus {
	this := MarketStatus{}
	return &this
}

// NewMarketStatusWithDefaults instantiates a new MarketStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketStatusWithDefaults() *MarketStatus {
	this := MarketStatus{}
	return &this
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *MarketStatus) GetExchange() string {
	if o == nil || o.Exchange == nil {
		var ret string
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketStatus) GetExchangeOk() (*string, bool) {
	if o == nil || o.Exchange == nil {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *MarketStatus) HasExchange() bool {
	if o != nil && o.Exchange != nil {
		return true
	}

	return false
}

// SetExchange gets a reference to the given string and assigns it to the Exchange field.
func (o *MarketStatus) SetExchange(v string) {
	o.Exchange = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *MarketStatus) GetTimezone() string {
	if o == nil || o.Timezone == nil {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketStatus) GetTimezoneOk() (*string, bool) {
	if o == nil || o.Timezone == nil {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *MarketStatus) HasTimezone() bool {
	if o != nil && o.Timezone != nil {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *MarketStatus) SetTimezone(v string) {
	o.Timezone = &v
}

// GetSession returns the Session field value if set, zero value otherwise.
func (o *MarketStatus) GetSession() string {
	if o == nil || o.Session == nil {
		var ret string
		return ret
	}
	return *o.Session
}

// GetSessionOk returns a tuple with the Session field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketStatus) GetSessionOk() (*string, bool) {
	if o == nil || o.Session == nil {
		return nil, false
	}
	return o.Session, true
}

// HasSession returns a boolean if a field has been set.
func (o *MarketStatus) HasSession() bool {
	if o != nil && o.Session != nil {
		return true
	}

	return false
}

// SetSession gets a reference to the given string and assigns it to the Session field.
func (o *MarketStatus) SetSession(v string) {
	o.Session = &v
}

// GetHoliday returns the Holiday field value if set, zero value otherwise.
func (o *MarketStatus) GetHoliday() string {
	if o == nil || o.Holiday == nil {
		var ret string
		return ret
	}
	return *o.Holiday
}

// GetHolidayOk returns a tuple with the Holiday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketStatus) GetHolidayOk() (*string, bool) {
	if o == nil || o.Holiday == nil {
		return nil, false
	}
	return o.Holiday, true
}

// HasHoliday returns a boolean if a field has been set.
func (o *MarketStatus) HasHoliday() bool {
	if o != nil && o.Holiday != nil {
		return true
	}

	return false
}

// SetHoliday gets a reference to the given string and assigns it to the Holiday field.
func (o *MarketStatus) SetHoliday(v string) {
	o.Holiday = &v
}

// GetIsOpen returns the IsOpen field value if set, zero value otherwise.
func (o *MarketStatus) GetIsOpen() bool {
	if o == nil || o.IsOpen == nil {
		var ret bool
		return ret
	}
	return *o.IsOpen
}

// GetIsOpenOk returns a tuple with the IsOpen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketStatus) GetIsOpenOk() (*bool, bool) {
	if o == nil || o.IsOpen == nil {
		return nil, false
	}
	return o.IsOpen, true
}

// HasIsOpen returns a boolean if a field has been set.
func (o *MarketStatus) HasIsOpen() bool {
	if o != nil && o.IsOpen != nil {
		return true
	}

	return false
}

// SetIsOpen gets a reference to the given bool and assigns it to the IsOpen field.
func (o *MarketStatus) SetIsOpen(v bool) {
	o.IsOpen = &v
}

// GetT returns the T field value if set, zero value otherwise.
func (o *MarketStatus) GetT() int64 {
	if o == nil || o.T == nil {
		var ret int64
		return ret
	}
	return *o.T
}

// GetTOk returns a tuple with the T field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketStatus) GetTOk() (*int64, bool) {
	if o == nil || o.T == nil {
		return nil, false
	}
	return o.T, true
}

// HasT returns a boolean if a field has been set.
func (o *MarketStatus) HasT() bool {
	if o != nil && o.T != nil {
		return true
	}

	return false
}

// SetT gets a reference to the given int64 and assigns it to the T field.
func (o *MarketStatus) SetT(v int64) {
	o.T = &v
}

func (o MarketStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Exchange != nil {
		toSerialize["exchange"] = o.Exchange
	}
	if o.Timezone != nil {
		toSerialize["timezone"] = o.Timezone
	}
	if o.Session != nil {
		toSerialize["session"] = o.Session
	}
	if o.Holiday != nil {
		toSerialize["holiday"] = o.Holiday
	}
	if o.IsOpen != nil {
		toSerialize["isOpen"] = o.IsOpen
	}
	if o.T != nil {
		toSerialize["t"] = o.T
	}
	return json.Marshal(toSerialize)
}

type NullableMarketStatus struct {
	value *MarketStatus
	isSet bool
}

func (v NullableMarketStatus) Get() *MarketStatus {
	return v.value
}

func (v *NullableMarketStatus) Set(val *MarketStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketStatus(val *MarketStatus) *NullableMarketStatus {
	return &NullableMarketStatus{value: val, isSet: true}
}

func (v NullableMarketStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


