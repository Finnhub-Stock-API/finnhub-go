/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// SectorMetricData struct for SectorMetricData
type SectorMetricData struct {
	// Sector
	Sector *string `json:"sector,omitempty"`
	// Metrics data in key-value format. <code>a</code> and <code>m</code> fields are for average and median respectively.
	Metrics *map[string]interface{} `json:"metrics,omitempty"`
}

// NewSectorMetricData instantiates a new SectorMetricData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSectorMetricData() *SectorMetricData {
	this := SectorMetricData{}
	return &this
}

// NewSectorMetricDataWithDefaults instantiates a new SectorMetricData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSectorMetricDataWithDefaults() *SectorMetricData {
	this := SectorMetricData{}
	return &this
}

// GetSector returns the Sector field value if set, zero value otherwise.
func (o *SectorMetricData) GetSector() string {
	if o == nil || o.Sector == nil {
		var ret string
		return ret
	}
	return *o.Sector
}

// GetSectorOk returns a tuple with the Sector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SectorMetricData) GetSectorOk() (*string, bool) {
	if o == nil || o.Sector == nil {
		return nil, false
	}
	return o.Sector, true
}

// HasSector returns a boolean if a field has been set.
func (o *SectorMetricData) HasSector() bool {
	if o != nil && o.Sector != nil {
		return true
	}

	return false
}

// SetSector gets a reference to the given string and assigns it to the Sector field.
func (o *SectorMetricData) SetSector(v string) {
	o.Sector = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *SectorMetricData) GetMetrics() map[string]interface{} {
	if o == nil || o.Metrics == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SectorMetricData) GetMetricsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Metrics == nil {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *SectorMetricData) HasMetrics() bool {
	if o != nil && o.Metrics != nil {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given map[string]interface{} and assigns it to the Metrics field.
func (o *SectorMetricData) SetMetrics(v map[string]interface{}) {
	o.Metrics = &v
}

func (o SectorMetricData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Sector != nil {
		toSerialize["sector"] = o.Sector
	}
	if o.Metrics != nil {
		toSerialize["metrics"] = o.Metrics
	}
	return json.Marshal(toSerialize)
}

type NullableSectorMetricData struct {
	value *SectorMetricData
	isSet bool
}

func (v NullableSectorMetricData) Get() *SectorMetricData {
	return v.value
}

func (v *NullableSectorMetricData) Set(val *SectorMetricData) {
	v.value = val
	v.isSet = true
}

func (v NullableSectorMetricData) IsSet() bool {
	return v.isSet
}

func (v *NullableSectorMetricData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSectorMetricData(val *SectorMetricData) *NullableSectorMetricData {
	return &NullableSectorMetricData{value: val, isSet: true}
}

func (v NullableSectorMetricData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSectorMetricData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


