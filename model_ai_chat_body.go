/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// AIChatBody struct for AIChatBody
type AIChatBody struct {
	// Messages
	Messages []AIChatMessage `json:"messages"`
	// Stream responses
	Stream *bool `json:"stream,omitempty"`
}

// NewAIChatBody instantiates a new AIChatBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAIChatBody(messages []AIChatMessage) *AIChatBody {
	this := AIChatBody{}
	this.Messages = messages
	return &this
}

// NewAIChatBodyWithDefaults instantiates a new AIChatBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAIChatBodyWithDefaults() *AIChatBody {
	this := AIChatBody{}
	return &this
}

// GetMessages returns the Messages field value
func (o *AIChatBody) GetMessages() []AIChatMessage {
	if o == nil {
		var ret []AIChatMessage
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *AIChatBody) GetMessagesOk() (*[]AIChatMessage, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Messages, true
}

// SetMessages sets field value
func (o *AIChatBody) SetMessages(v []AIChatMessage) {
	o.Messages = v
}

// GetStream returns the Stream field value if set, zero value otherwise.
func (o *AIChatBody) GetStream() bool {
	if o == nil || o.Stream == nil {
		var ret bool
		return ret
	}
	return *o.Stream
}

// GetStreamOk returns a tuple with the Stream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIChatBody) GetStreamOk() (*bool, bool) {
	if o == nil || o.Stream == nil {
		return nil, false
	}
	return o.Stream, true
}

// HasStream returns a boolean if a field has been set.
func (o *AIChatBody) HasStream() bool {
	if o != nil && o.Stream != nil {
		return true
	}

	return false
}

// SetStream gets a reference to the given bool and assigns it to the Stream field.
func (o *AIChatBody) SetStream(v bool) {
	o.Stream = &v
}

func (o AIChatBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["messages"] = o.Messages
	}
	if o.Stream != nil {
		toSerialize["stream"] = o.Stream
	}
	return json.Marshal(toSerialize)
}

type NullableAIChatBody struct {
	value *AIChatBody
	isSet bool
}

func (v NullableAIChatBody) Get() *AIChatBody {
	return v.value
}

func (v *NullableAIChatBody) Set(val *AIChatBody) {
	v.value = val
	v.isSet = true
}

func (v NullableAIChatBody) IsSet() bool {
	return v.isSet
}

func (v *NullableAIChatBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAIChatBody(val *AIChatBody) *NullableAIChatBody {
	return &NullableAIChatBody{value: val, isSet: true}
}

func (v NullableAIChatBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAIChatBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


