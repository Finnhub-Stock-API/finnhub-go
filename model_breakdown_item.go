/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// BreakdownItem struct for BreakdownItem
type BreakdownItem struct {
	// Access number of the report from which the data is sourced.
	AccessNumber *string `json:"accessNumber,omitempty"`
	Breakdown *map[string]interface{} `json:"breakdown,omitempty"`
}

// NewBreakdownItem instantiates a new BreakdownItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBreakdownItem() *BreakdownItem {
	this := BreakdownItem{}
	return &this
}

// NewBreakdownItemWithDefaults instantiates a new BreakdownItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBreakdownItemWithDefaults() *BreakdownItem {
	this := BreakdownItem{}
	return &this
}

// GetAccessNumber returns the AccessNumber field value if set, zero value otherwise.
func (o *BreakdownItem) GetAccessNumber() string {
	if o == nil || o.AccessNumber == nil {
		var ret string
		return ret
	}
	return *o.AccessNumber
}

// GetAccessNumberOk returns a tuple with the AccessNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BreakdownItem) GetAccessNumberOk() (*string, bool) {
	if o == nil || o.AccessNumber == nil {
		return nil, false
	}
	return o.AccessNumber, true
}

// HasAccessNumber returns a boolean if a field has been set.
func (o *BreakdownItem) HasAccessNumber() bool {
	if o != nil && o.AccessNumber != nil {
		return true
	}

	return false
}

// SetAccessNumber gets a reference to the given string and assigns it to the AccessNumber field.
func (o *BreakdownItem) SetAccessNumber(v string) {
	o.AccessNumber = &v
}

// GetBreakdown returns the Breakdown field value if set, zero value otherwise.
func (o *BreakdownItem) GetBreakdown() map[string]interface{} {
	if o == nil || o.Breakdown == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Breakdown
}

// GetBreakdownOk returns a tuple with the Breakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BreakdownItem) GetBreakdownOk() (*map[string]interface{}, bool) {
	if o == nil || o.Breakdown == nil {
		return nil, false
	}
	return o.Breakdown, true
}

// HasBreakdown returns a boolean if a field has been set.
func (o *BreakdownItem) HasBreakdown() bool {
	if o != nil && o.Breakdown != nil {
		return true
	}

	return false
}

// SetBreakdown gets a reference to the given map[string]interface{} and assigns it to the Breakdown field.
func (o *BreakdownItem) SetBreakdown(v map[string]interface{}) {
	o.Breakdown = &v
}

func (o BreakdownItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessNumber != nil {
		toSerialize["accessNumber"] = o.AccessNumber
	}
	if o.Breakdown != nil {
		toSerialize["breakdown"] = o.Breakdown
	}
	return json.Marshal(toSerialize)
}

type NullableBreakdownItem struct {
	value *BreakdownItem
	isSet bool
}

func (v NullableBreakdownItem) Get() *BreakdownItem {
	return v.value
}

func (v *NullableBreakdownItem) Set(val *BreakdownItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBreakdownItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBreakdownItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBreakdownItem(val *BreakdownItem) *NullableBreakdownItem {
	return &NullableBreakdownItem{value: val, isSet: true}
}

func (v NullableBreakdownItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBreakdownItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


