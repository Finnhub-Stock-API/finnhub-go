/*
 * Finnhub API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// KeyCustomersSuppliers struct for KeyCustomersSuppliers
type KeyCustomersSuppliers struct {
	// Symbol
	Symbol *string `json:"symbol,omitempty"`
	// Name
	Name *string `json:"name,omitempty"`
	// Whether the company is a customer.
	Customer *bool `json:"customer,omitempty"`
	// Whether the company is a supplier
	Supplier *bool `json:"supplier,omitempty"`
}

// NewKeyCustomersSuppliers instantiates a new KeyCustomersSuppliers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyCustomersSuppliers() *KeyCustomersSuppliers {
	this := KeyCustomersSuppliers{}
	return &this
}

// NewKeyCustomersSuppliersWithDefaults instantiates a new KeyCustomersSuppliers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyCustomersSuppliersWithDefaults() *KeyCustomersSuppliers {
	this := KeyCustomersSuppliers{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *KeyCustomersSuppliers) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyCustomersSuppliers) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *KeyCustomersSuppliers) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *KeyCustomersSuppliers) SetSymbol(v string) {
	o.Symbol = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KeyCustomersSuppliers) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyCustomersSuppliers) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KeyCustomersSuppliers) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KeyCustomersSuppliers) SetName(v string) {
	o.Name = &v
}

// GetCustomer returns the Customer field value if set, zero value otherwise.
func (o *KeyCustomersSuppliers) GetCustomer() bool {
	if o == nil || o.Customer == nil {
		var ret bool
		return ret
	}
	return *o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyCustomersSuppliers) GetCustomerOk() (*bool, bool) {
	if o == nil || o.Customer == nil {
		return nil, false
	}
	return o.Customer, true
}

// HasCustomer returns a boolean if a field has been set.
func (o *KeyCustomersSuppliers) HasCustomer() bool {
	if o != nil && o.Customer != nil {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given bool and assigns it to the Customer field.
func (o *KeyCustomersSuppliers) SetCustomer(v bool) {
	o.Customer = &v
}

// GetSupplier returns the Supplier field value if set, zero value otherwise.
func (o *KeyCustomersSuppliers) GetSupplier() bool {
	if o == nil || o.Supplier == nil {
		var ret bool
		return ret
	}
	return *o.Supplier
}

// GetSupplierOk returns a tuple with the Supplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyCustomersSuppliers) GetSupplierOk() (*bool, bool) {
	if o == nil || o.Supplier == nil {
		return nil, false
	}
	return o.Supplier, true
}

// HasSupplier returns a boolean if a field has been set.
func (o *KeyCustomersSuppliers) HasSupplier() bool {
	if o != nil && o.Supplier != nil {
		return true
	}

	return false
}

// SetSupplier gets a reference to the given bool and assigns it to the Supplier field.
func (o *KeyCustomersSuppliers) SetSupplier(v bool) {
	o.Supplier = &v
}

func (o KeyCustomersSuppliers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Customer != nil {
		toSerialize["customer"] = o.Customer
	}
	if o.Supplier != nil {
		toSerialize["supplier"] = o.Supplier
	}
	return json.Marshal(toSerialize)
}

type NullableKeyCustomersSuppliers struct {
	value *KeyCustomersSuppliers
	isSet bool
}

func (v NullableKeyCustomersSuppliers) Get() *KeyCustomersSuppliers {
	return v.value
}

func (v *NullableKeyCustomersSuppliers) Set(val *KeyCustomersSuppliers) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyCustomersSuppliers) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyCustomersSuppliers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyCustomersSuppliers(val *KeyCustomersSuppliers) *NullableKeyCustomersSuppliers {
	return &NullableKeyCustomersSuppliers{value: val, isSet: true}
}

func (v NullableKeyCustomersSuppliers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyCustomersSuppliers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


