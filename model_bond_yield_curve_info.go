/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// BondYieldCurveInfo struct for BondYieldCurveInfo
type BondYieldCurveInfo struct {
	// Date of the reading
	D *string `json:"d,omitempty"`
	// Value
	V *float32 `json:"v,omitempty"`
}

// NewBondYieldCurveInfo instantiates a new BondYieldCurveInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBondYieldCurveInfo() *BondYieldCurveInfo {
	this := BondYieldCurveInfo{}
	return &this
}

// NewBondYieldCurveInfoWithDefaults instantiates a new BondYieldCurveInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBondYieldCurveInfoWithDefaults() *BondYieldCurveInfo {
	this := BondYieldCurveInfo{}
	return &this
}

// GetD returns the D field value if set, zero value otherwise.
func (o *BondYieldCurveInfo) GetD() string {
	if o == nil || o.D == nil {
		var ret string
		return ret
	}
	return *o.D
}

// GetDOk returns a tuple with the D field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondYieldCurveInfo) GetDOk() (*string, bool) {
	if o == nil || o.D == nil {
		return nil, false
	}
	return o.D, true
}

// HasD returns a boolean if a field has been set.
func (o *BondYieldCurveInfo) HasD() bool {
	if o != nil && o.D != nil {
		return true
	}

	return false
}

// SetD gets a reference to the given string and assigns it to the D field.
func (o *BondYieldCurveInfo) SetD(v string) {
	o.D = &v
}

// GetV returns the V field value if set, zero value otherwise.
func (o *BondYieldCurveInfo) GetV() float32 {
	if o == nil || o.V == nil {
		var ret float32
		return ret
	}
	return *o.V
}

// GetVOk returns a tuple with the V field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondYieldCurveInfo) GetVOk() (*float32, bool) {
	if o == nil || o.V == nil {
		return nil, false
	}
	return o.V, true
}

// HasV returns a boolean if a field has been set.
func (o *BondYieldCurveInfo) HasV() bool {
	if o != nil && o.V != nil {
		return true
	}

	return false
}

// SetV gets a reference to the given float32 and assigns it to the V field.
func (o *BondYieldCurveInfo) SetV(v float32) {
	o.V = &v
}

func (o BondYieldCurveInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.D != nil {
		toSerialize["d"] = o.D
	}
	if o.V != nil {
		toSerialize["v"] = o.V
	}
	return json.Marshal(toSerialize)
}

type NullableBondYieldCurveInfo struct {
	value *BondYieldCurveInfo
	isSet bool
}

func (v NullableBondYieldCurveInfo) Get() *BondYieldCurveInfo {
	return v.value
}

func (v *NullableBondYieldCurveInfo) Set(val *BondYieldCurveInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBondYieldCurveInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBondYieldCurveInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBondYieldCurveInfo(val *BondYieldCurveInfo) *NullableBondYieldCurveInfo {
	return &NullableBondYieldCurveInfo{value: val, isSet: true}
}

func (v NullableBondYieldCurveInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBondYieldCurveInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


