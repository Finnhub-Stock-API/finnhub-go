/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// CompanyProfile2 struct for CompanyProfile2
type CompanyProfile2 struct {
	// Country of company's headquarter.
	Country *string `json:"country,omitempty"`
	// Currency used in company filings.
	Currency *string `json:"currency,omitempty"`
	// Listed exchange.
	Exchange *string `json:"exchange,omitempty"`
	// Company name.
	Name *string `json:"name,omitempty"`
	// Company symbol/ticker as used on the listed exchange.
	Ticker *string `json:"ticker,omitempty"`
	// IPO date.
	Ipo *string `json:"ipo,omitempty"`
	// Market Capitalization.
	MarketCapitalization *float32 `json:"marketCapitalization,omitempty"`
	// Number of oustanding shares.
	ShareOutstanding *float32 `json:"shareOutstanding,omitempty"`
	// Logo image.
	Logo *string `json:"logo,omitempty"`
	// Company phone number.
	Phone *string `json:"phone,omitempty"`
	// Company website.
	Weburl *string `json:"weburl,omitempty"`
	// Finnhub industry classification.
	FinnhubIndustry *string `json:"finnhubIndustry,omitempty"`
}

// NewCompanyProfile2 instantiates a new CompanyProfile2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyProfile2() *CompanyProfile2 {
	this := CompanyProfile2{}
	return &this
}

// NewCompanyProfile2WithDefaults instantiates a new CompanyProfile2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyProfile2WithDefaults() *CompanyProfile2 {
	this := CompanyProfile2{}
	return &this
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CompanyProfile2) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfile2) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CompanyProfile2) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *CompanyProfile2) SetCountry(v string) {
	o.Country = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CompanyProfile2) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfile2) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CompanyProfile2) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *CompanyProfile2) SetCurrency(v string) {
	o.Currency = &v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *CompanyProfile2) GetExchange() string {
	if o == nil || o.Exchange == nil {
		var ret string
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfile2) GetExchangeOk() (*string, bool) {
	if o == nil || o.Exchange == nil {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *CompanyProfile2) HasExchange() bool {
	if o != nil && o.Exchange != nil {
		return true
	}

	return false
}

// SetExchange gets a reference to the given string and assigns it to the Exchange field.
func (o *CompanyProfile2) SetExchange(v string) {
	o.Exchange = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CompanyProfile2) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfile2) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CompanyProfile2) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CompanyProfile2) SetName(v string) {
	o.Name = &v
}

// GetTicker returns the Ticker field value if set, zero value otherwise.
func (o *CompanyProfile2) GetTicker() string {
	if o == nil || o.Ticker == nil {
		var ret string
		return ret
	}
	return *o.Ticker
}

// GetTickerOk returns a tuple with the Ticker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfile2) GetTickerOk() (*string, bool) {
	if o == nil || o.Ticker == nil {
		return nil, false
	}
	return o.Ticker, true
}

// HasTicker returns a boolean if a field has been set.
func (o *CompanyProfile2) HasTicker() bool {
	if o != nil && o.Ticker != nil {
		return true
	}

	return false
}

// SetTicker gets a reference to the given string and assigns it to the Ticker field.
func (o *CompanyProfile2) SetTicker(v string) {
	o.Ticker = &v
}

// GetIpo returns the Ipo field value if set, zero value otherwise.
func (o *CompanyProfile2) GetIpo() string {
	if o == nil || o.Ipo == nil {
		var ret string
		return ret
	}
	return *o.Ipo
}

// GetIpoOk returns a tuple with the Ipo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfile2) GetIpoOk() (*string, bool) {
	if o == nil || o.Ipo == nil {
		return nil, false
	}
	return o.Ipo, true
}

// HasIpo returns a boolean if a field has been set.
func (o *CompanyProfile2) HasIpo() bool {
	if o != nil && o.Ipo != nil {
		return true
	}

	return false
}

// SetIpo gets a reference to the given string and assigns it to the Ipo field.
func (o *CompanyProfile2) SetIpo(v string) {
	o.Ipo = &v
}

// GetMarketCapitalization returns the MarketCapitalization field value if set, zero value otherwise.
func (o *CompanyProfile2) GetMarketCapitalization() float32 {
	if o == nil || o.MarketCapitalization == nil {
		var ret float32
		return ret
	}
	return *o.MarketCapitalization
}

// GetMarketCapitalizationOk returns a tuple with the MarketCapitalization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfile2) GetMarketCapitalizationOk() (*float32, bool) {
	if o == nil || o.MarketCapitalization == nil {
		return nil, false
	}
	return o.MarketCapitalization, true
}

// HasMarketCapitalization returns a boolean if a field has been set.
func (o *CompanyProfile2) HasMarketCapitalization() bool {
	if o != nil && o.MarketCapitalization != nil {
		return true
	}

	return false
}

// SetMarketCapitalization gets a reference to the given float32 and assigns it to the MarketCapitalization field.
func (o *CompanyProfile2) SetMarketCapitalization(v float32) {
	o.MarketCapitalization = &v
}

// GetShareOutstanding returns the ShareOutstanding field value if set, zero value otherwise.
func (o *CompanyProfile2) GetShareOutstanding() float32 {
	if o == nil || o.ShareOutstanding == nil {
		var ret float32
		return ret
	}
	return *o.ShareOutstanding
}

// GetShareOutstandingOk returns a tuple with the ShareOutstanding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfile2) GetShareOutstandingOk() (*float32, bool) {
	if o == nil || o.ShareOutstanding == nil {
		return nil, false
	}
	return o.ShareOutstanding, true
}

// HasShareOutstanding returns a boolean if a field has been set.
func (o *CompanyProfile2) HasShareOutstanding() bool {
	if o != nil && o.ShareOutstanding != nil {
		return true
	}

	return false
}

// SetShareOutstanding gets a reference to the given float32 and assigns it to the ShareOutstanding field.
func (o *CompanyProfile2) SetShareOutstanding(v float32) {
	o.ShareOutstanding = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *CompanyProfile2) GetLogo() string {
	if o == nil || o.Logo == nil {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfile2) GetLogoOk() (*string, bool) {
	if o == nil || o.Logo == nil {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *CompanyProfile2) HasLogo() bool {
	if o != nil && o.Logo != nil {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *CompanyProfile2) SetLogo(v string) {
	o.Logo = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *CompanyProfile2) GetPhone() string {
	if o == nil || o.Phone == nil {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfile2) GetPhoneOk() (*string, bool) {
	if o == nil || o.Phone == nil {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *CompanyProfile2) HasPhone() bool {
	if o != nil && o.Phone != nil {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *CompanyProfile2) SetPhone(v string) {
	o.Phone = &v
}

// GetWeburl returns the Weburl field value if set, zero value otherwise.
func (o *CompanyProfile2) GetWeburl() string {
	if o == nil || o.Weburl == nil {
		var ret string
		return ret
	}
	return *o.Weburl
}

// GetWeburlOk returns a tuple with the Weburl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfile2) GetWeburlOk() (*string, bool) {
	if o == nil || o.Weburl == nil {
		return nil, false
	}
	return o.Weburl, true
}

// HasWeburl returns a boolean if a field has been set.
func (o *CompanyProfile2) HasWeburl() bool {
	if o != nil && o.Weburl != nil {
		return true
	}

	return false
}

// SetWeburl gets a reference to the given string and assigns it to the Weburl field.
func (o *CompanyProfile2) SetWeburl(v string) {
	o.Weburl = &v
}

// GetFinnhubIndustry returns the FinnhubIndustry field value if set, zero value otherwise.
func (o *CompanyProfile2) GetFinnhubIndustry() string {
	if o == nil || o.FinnhubIndustry == nil {
		var ret string
		return ret
	}
	return *o.FinnhubIndustry
}

// GetFinnhubIndustryOk returns a tuple with the FinnhubIndustry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfile2) GetFinnhubIndustryOk() (*string, bool) {
	if o == nil || o.FinnhubIndustry == nil {
		return nil, false
	}
	return o.FinnhubIndustry, true
}

// HasFinnhubIndustry returns a boolean if a field has been set.
func (o *CompanyProfile2) HasFinnhubIndustry() bool {
	if o != nil && o.FinnhubIndustry != nil {
		return true
	}

	return false
}

// SetFinnhubIndustry gets a reference to the given string and assigns it to the FinnhubIndustry field.
func (o *CompanyProfile2) SetFinnhubIndustry(v string) {
	o.FinnhubIndustry = &v
}

func (o CompanyProfile2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.Exchange != nil {
		toSerialize["exchange"] = o.Exchange
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Ticker != nil {
		toSerialize["ticker"] = o.Ticker
	}
	if o.Ipo != nil {
		toSerialize["ipo"] = o.Ipo
	}
	if o.MarketCapitalization != nil {
		toSerialize["marketCapitalization"] = o.MarketCapitalization
	}
	if o.ShareOutstanding != nil {
		toSerialize["shareOutstanding"] = o.ShareOutstanding
	}
	if o.Logo != nil {
		toSerialize["logo"] = o.Logo
	}
	if o.Phone != nil {
		toSerialize["phone"] = o.Phone
	}
	if o.Weburl != nil {
		toSerialize["weburl"] = o.Weburl
	}
	if o.FinnhubIndustry != nil {
		toSerialize["finnhubIndustry"] = o.FinnhubIndustry
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyProfile2 struct {
	value *CompanyProfile2
	isSet bool
}

func (v NullableCompanyProfile2) Get() *CompanyProfile2 {
	return v.value
}

func (v *NullableCompanyProfile2) Set(val *CompanyProfile2) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyProfile2) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyProfile2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyProfile2(val *CompanyProfile2) *NullableCompanyProfile2 {
	return &NullableCompanyProfile2{value: val, isSet: true}
}

func (v NullableCompanyProfile2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyProfile2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


