/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// SupportResistance struct for SupportResistance
type SupportResistance struct {
	// Array of support and resistance levels.
	Levels *[]float32 `json:"levels,omitempty"`
}

// NewSupportResistance instantiates a new SupportResistance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupportResistance() *SupportResistance {
	this := SupportResistance{}
	return &this
}

// NewSupportResistanceWithDefaults instantiates a new SupportResistance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupportResistanceWithDefaults() *SupportResistance {
	this := SupportResistance{}
	return &this
}

// GetLevels returns the Levels field value if set, zero value otherwise.
func (o *SupportResistance) GetLevels() []float32 {
	if o == nil || o.Levels == nil {
		var ret []float32
		return ret
	}
	return *o.Levels
}

// GetLevelsOk returns a tuple with the Levels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportResistance) GetLevelsOk() (*[]float32, bool) {
	if o == nil || o.Levels == nil {
		return nil, false
	}
	return o.Levels, true
}

// HasLevels returns a boolean if a field has been set.
func (o *SupportResistance) HasLevels() bool {
	if o != nil && o.Levels != nil {
		return true
	}

	return false
}

// SetLevels gets a reference to the given []float32 and assigns it to the Levels field.
func (o *SupportResistance) SetLevels(v []float32) {
	o.Levels = &v
}

func (o SupportResistance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Levels != nil {
		toSerialize["levels"] = o.Levels
	}
	return json.Marshal(toSerialize)
}

type NullableSupportResistance struct {
	value *SupportResistance
	isSet bool
}

func (v NullableSupportResistance) Get() *SupportResistance {
	return v.value
}

func (v *NullableSupportResistance) Set(val *SupportResistance) {
	v.value = val
	v.isSet = true
}

func (v NullableSupportResistance) IsSet() bool {
	return v.isSet
}

func (v *NullableSupportResistance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupportResistance(val *SupportResistance) *NullableSupportResistance {
	return &NullableSupportResistance{value: val, isSet: true}
}

func (v NullableSupportResistance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupportResistance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


