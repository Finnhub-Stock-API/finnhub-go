/*
 * Finnhub API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// Sentiment struct for Sentiment
type Sentiment struct {
	// 
	BearishPercent *int64 `json:"bearishPercent,omitempty"`
	// 
	BullishPercent *int64 `json:"bullishPercent,omitempty"`
}

// NewSentiment instantiates a new Sentiment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSentiment() *Sentiment {
	this := Sentiment{}
	return &this
}

// NewSentimentWithDefaults instantiates a new Sentiment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSentimentWithDefaults() *Sentiment {
	this := Sentiment{}
	return &this
}

// GetBearishPercent returns the BearishPercent field value if set, zero value otherwise.
func (o *Sentiment) GetBearishPercent() int64 {
	if o == nil || o.BearishPercent == nil {
		var ret int64
		return ret
	}
	return *o.BearishPercent
}

// GetBearishPercentOk returns a tuple with the BearishPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sentiment) GetBearishPercentOk() (*int64, bool) {
	if o == nil || o.BearishPercent == nil {
		return nil, false
	}
	return o.BearishPercent, true
}

// HasBearishPercent returns a boolean if a field has been set.
func (o *Sentiment) HasBearishPercent() bool {
	if o != nil && o.BearishPercent != nil {
		return true
	}

	return false
}

// SetBearishPercent gets a reference to the given int64 and assigns it to the BearishPercent field.
func (o *Sentiment) SetBearishPercent(v int64) {
	o.BearishPercent = &v
}

// GetBullishPercent returns the BullishPercent field value if set, zero value otherwise.
func (o *Sentiment) GetBullishPercent() int64 {
	if o == nil || o.BullishPercent == nil {
		var ret int64
		return ret
	}
	return *o.BullishPercent
}

// GetBullishPercentOk returns a tuple with the BullishPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sentiment) GetBullishPercentOk() (*int64, bool) {
	if o == nil || o.BullishPercent == nil {
		return nil, false
	}
	return o.BullishPercent, true
}

// HasBullishPercent returns a boolean if a field has been set.
func (o *Sentiment) HasBullishPercent() bool {
	if o != nil && o.BullishPercent != nil {
		return true
	}

	return false
}

// SetBullishPercent gets a reference to the given int64 and assigns it to the BullishPercent field.
func (o *Sentiment) SetBullishPercent(v int64) {
	o.BullishPercent = &v
}

func (o Sentiment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BearishPercent != nil {
		toSerialize["bearishPercent"] = o.BearishPercent
	}
	if o.BullishPercent != nil {
		toSerialize["bullishPercent"] = o.BullishPercent
	}
	return json.Marshal(toSerialize)
}

type NullableSentiment struct {
	value *Sentiment
	isSet bool
}

func (v NullableSentiment) Get() *Sentiment {
	return v.value
}

func (v *NullableSentiment) Set(val *Sentiment) {
	v.value = val
	v.isSet = true
}

func (v NullableSentiment) IsSet() bool {
	return v.isSet
}

func (v *NullableSentiment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSentiment(val *Sentiment) *NullableSentiment {
	return &NullableSentiment{value: val, isSet: true}
}

func (v NullableSentiment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSentiment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


