/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// SimilarityIndexInfo struct for SimilarityIndexInfo
type SimilarityIndexInfo struct {
	// CIK.
	Cik *string `json:"cik,omitempty"`
	// Cosine similarity of Item 1 (Business). This number is only available for Annual reports.
	Item1 *float32 `json:"item1,omitempty"`
	// Cosine similarity of Item 1A (Risk Factors). This number is available for both Annual and Quarterly reports.
	Item1a *float32 `json:"item1a,omitempty"`
	// Cosine similarity of Item 2 (Management’s Discussion and Analysis of Financial Condition and Results of Operations). This number is only available for Quarterly reports.
	Item2 *float32 `json:"item2,omitempty"`
	// Cosine similarity of Item 7 (Management’s Discussion and Analysis of Financial Condition and Results of Operations). This number is only available for Annual reports.
	Item7 *float32 `json:"item7,omitempty"`
	// Cosine similarity of Item 7A (Quantitative and Qualitative Disclosures About Market Risk). This number is only available for Annual reports.
	Item7a *float32 `json:"item7a,omitempty"`
	// Access number.
	AccessNumber *string `json:"accessNumber,omitempty"`
	// Form type.
	Form *string `json:"form,omitempty"`
	// Filed date <code>%Y-%m-%d %H:%M:%S</code>.
	FiledDate *string `json:"filedDate,omitempty"`
	// Accepted date <code>%Y-%m-%d %H:%M:%S</code>.
	AcceptedDate *string `json:"acceptedDate,omitempty"`
	// Report's URL.
	ReportUrl *string `json:"reportUrl,omitempty"`
	// Filing's URL.
	FilingUrl *string `json:"filingUrl,omitempty"`
}

// NewSimilarityIndexInfo instantiates a new SimilarityIndexInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimilarityIndexInfo() *SimilarityIndexInfo {
	this := SimilarityIndexInfo{}
	return &this
}

// NewSimilarityIndexInfoWithDefaults instantiates a new SimilarityIndexInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimilarityIndexInfoWithDefaults() *SimilarityIndexInfo {
	this := SimilarityIndexInfo{}
	return &this
}

// GetCik returns the Cik field value if set, zero value otherwise.
func (o *SimilarityIndexInfo) GetCik() string {
	if o == nil || o.Cik == nil {
		var ret string
		return ret
	}
	return *o.Cik
}

// GetCikOk returns a tuple with the Cik field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimilarityIndexInfo) GetCikOk() (*string, bool) {
	if o == nil || o.Cik == nil {
		return nil, false
	}
	return o.Cik, true
}

// HasCik returns a boolean if a field has been set.
func (o *SimilarityIndexInfo) HasCik() bool {
	if o != nil && o.Cik != nil {
		return true
	}

	return false
}

// SetCik gets a reference to the given string and assigns it to the Cik field.
func (o *SimilarityIndexInfo) SetCik(v string) {
	o.Cik = &v
}

// GetItem1 returns the Item1 field value if set, zero value otherwise.
func (o *SimilarityIndexInfo) GetItem1() float32 {
	if o == nil || o.Item1 == nil {
		var ret float32
		return ret
	}
	return *o.Item1
}

// GetItem1Ok returns a tuple with the Item1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimilarityIndexInfo) GetItem1Ok() (*float32, bool) {
	if o == nil || o.Item1 == nil {
		return nil, false
	}
	return o.Item1, true
}

// HasItem1 returns a boolean if a field has been set.
func (o *SimilarityIndexInfo) HasItem1() bool {
	if o != nil && o.Item1 != nil {
		return true
	}

	return false
}

// SetItem1 gets a reference to the given float32 and assigns it to the Item1 field.
func (o *SimilarityIndexInfo) SetItem1(v float32) {
	o.Item1 = &v
}

// GetItem1a returns the Item1a field value if set, zero value otherwise.
func (o *SimilarityIndexInfo) GetItem1a() float32 {
	if o == nil || o.Item1a == nil {
		var ret float32
		return ret
	}
	return *o.Item1a
}

// GetItem1aOk returns a tuple with the Item1a field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimilarityIndexInfo) GetItem1aOk() (*float32, bool) {
	if o == nil || o.Item1a == nil {
		return nil, false
	}
	return o.Item1a, true
}

// HasItem1a returns a boolean if a field has been set.
func (o *SimilarityIndexInfo) HasItem1a() bool {
	if o != nil && o.Item1a != nil {
		return true
	}

	return false
}

// SetItem1a gets a reference to the given float32 and assigns it to the Item1a field.
func (o *SimilarityIndexInfo) SetItem1a(v float32) {
	o.Item1a = &v
}

// GetItem2 returns the Item2 field value if set, zero value otherwise.
func (o *SimilarityIndexInfo) GetItem2() float32 {
	if o == nil || o.Item2 == nil {
		var ret float32
		return ret
	}
	return *o.Item2
}

// GetItem2Ok returns a tuple with the Item2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimilarityIndexInfo) GetItem2Ok() (*float32, bool) {
	if o == nil || o.Item2 == nil {
		return nil, false
	}
	return o.Item2, true
}

// HasItem2 returns a boolean if a field has been set.
func (o *SimilarityIndexInfo) HasItem2() bool {
	if o != nil && o.Item2 != nil {
		return true
	}

	return false
}

// SetItem2 gets a reference to the given float32 and assigns it to the Item2 field.
func (o *SimilarityIndexInfo) SetItem2(v float32) {
	o.Item2 = &v
}

// GetItem7 returns the Item7 field value if set, zero value otherwise.
func (o *SimilarityIndexInfo) GetItem7() float32 {
	if o == nil || o.Item7 == nil {
		var ret float32
		return ret
	}
	return *o.Item7
}

// GetItem7Ok returns a tuple with the Item7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimilarityIndexInfo) GetItem7Ok() (*float32, bool) {
	if o == nil || o.Item7 == nil {
		return nil, false
	}
	return o.Item7, true
}

// HasItem7 returns a boolean if a field has been set.
func (o *SimilarityIndexInfo) HasItem7() bool {
	if o != nil && o.Item7 != nil {
		return true
	}

	return false
}

// SetItem7 gets a reference to the given float32 and assigns it to the Item7 field.
func (o *SimilarityIndexInfo) SetItem7(v float32) {
	o.Item7 = &v
}

// GetItem7a returns the Item7a field value if set, zero value otherwise.
func (o *SimilarityIndexInfo) GetItem7a() float32 {
	if o == nil || o.Item7a == nil {
		var ret float32
		return ret
	}
	return *o.Item7a
}

// GetItem7aOk returns a tuple with the Item7a field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimilarityIndexInfo) GetItem7aOk() (*float32, bool) {
	if o == nil || o.Item7a == nil {
		return nil, false
	}
	return o.Item7a, true
}

// HasItem7a returns a boolean if a field has been set.
func (o *SimilarityIndexInfo) HasItem7a() bool {
	if o != nil && o.Item7a != nil {
		return true
	}

	return false
}

// SetItem7a gets a reference to the given float32 and assigns it to the Item7a field.
func (o *SimilarityIndexInfo) SetItem7a(v float32) {
	o.Item7a = &v
}

// GetAccessNumber returns the AccessNumber field value if set, zero value otherwise.
func (o *SimilarityIndexInfo) GetAccessNumber() string {
	if o == nil || o.AccessNumber == nil {
		var ret string
		return ret
	}
	return *o.AccessNumber
}

// GetAccessNumberOk returns a tuple with the AccessNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimilarityIndexInfo) GetAccessNumberOk() (*string, bool) {
	if o == nil || o.AccessNumber == nil {
		return nil, false
	}
	return o.AccessNumber, true
}

// HasAccessNumber returns a boolean if a field has been set.
func (o *SimilarityIndexInfo) HasAccessNumber() bool {
	if o != nil && o.AccessNumber != nil {
		return true
	}

	return false
}

// SetAccessNumber gets a reference to the given string and assigns it to the AccessNumber field.
func (o *SimilarityIndexInfo) SetAccessNumber(v string) {
	o.AccessNumber = &v
}

// GetForm returns the Form field value if set, zero value otherwise.
func (o *SimilarityIndexInfo) GetForm() string {
	if o == nil || o.Form == nil {
		var ret string
		return ret
	}
	return *o.Form
}

// GetFormOk returns a tuple with the Form field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimilarityIndexInfo) GetFormOk() (*string, bool) {
	if o == nil || o.Form == nil {
		return nil, false
	}
	return o.Form, true
}

// HasForm returns a boolean if a field has been set.
func (o *SimilarityIndexInfo) HasForm() bool {
	if o != nil && o.Form != nil {
		return true
	}

	return false
}

// SetForm gets a reference to the given string and assigns it to the Form field.
func (o *SimilarityIndexInfo) SetForm(v string) {
	o.Form = &v
}

// GetFiledDate returns the FiledDate field value if set, zero value otherwise.
func (o *SimilarityIndexInfo) GetFiledDate() string {
	if o == nil || o.FiledDate == nil {
		var ret string
		return ret
	}
	return *o.FiledDate
}

// GetFiledDateOk returns a tuple with the FiledDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimilarityIndexInfo) GetFiledDateOk() (*string, bool) {
	if o == nil || o.FiledDate == nil {
		return nil, false
	}
	return o.FiledDate, true
}

// HasFiledDate returns a boolean if a field has been set.
func (o *SimilarityIndexInfo) HasFiledDate() bool {
	if o != nil && o.FiledDate != nil {
		return true
	}

	return false
}

// SetFiledDate gets a reference to the given string and assigns it to the FiledDate field.
func (o *SimilarityIndexInfo) SetFiledDate(v string) {
	o.FiledDate = &v
}

// GetAcceptedDate returns the AcceptedDate field value if set, zero value otherwise.
func (o *SimilarityIndexInfo) GetAcceptedDate() string {
	if o == nil || o.AcceptedDate == nil {
		var ret string
		return ret
	}
	return *o.AcceptedDate
}

// GetAcceptedDateOk returns a tuple with the AcceptedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimilarityIndexInfo) GetAcceptedDateOk() (*string, bool) {
	if o == nil || o.AcceptedDate == nil {
		return nil, false
	}
	return o.AcceptedDate, true
}

// HasAcceptedDate returns a boolean if a field has been set.
func (o *SimilarityIndexInfo) HasAcceptedDate() bool {
	if o != nil && o.AcceptedDate != nil {
		return true
	}

	return false
}

// SetAcceptedDate gets a reference to the given string and assigns it to the AcceptedDate field.
func (o *SimilarityIndexInfo) SetAcceptedDate(v string) {
	o.AcceptedDate = &v
}

// GetReportUrl returns the ReportUrl field value if set, zero value otherwise.
func (o *SimilarityIndexInfo) GetReportUrl() string {
	if o == nil || o.ReportUrl == nil {
		var ret string
		return ret
	}
	return *o.ReportUrl
}

// GetReportUrlOk returns a tuple with the ReportUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimilarityIndexInfo) GetReportUrlOk() (*string, bool) {
	if o == nil || o.ReportUrl == nil {
		return nil, false
	}
	return o.ReportUrl, true
}

// HasReportUrl returns a boolean if a field has been set.
func (o *SimilarityIndexInfo) HasReportUrl() bool {
	if o != nil && o.ReportUrl != nil {
		return true
	}

	return false
}

// SetReportUrl gets a reference to the given string and assigns it to the ReportUrl field.
func (o *SimilarityIndexInfo) SetReportUrl(v string) {
	o.ReportUrl = &v
}

// GetFilingUrl returns the FilingUrl field value if set, zero value otherwise.
func (o *SimilarityIndexInfo) GetFilingUrl() string {
	if o == nil || o.FilingUrl == nil {
		var ret string
		return ret
	}
	return *o.FilingUrl
}

// GetFilingUrlOk returns a tuple with the FilingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimilarityIndexInfo) GetFilingUrlOk() (*string, bool) {
	if o == nil || o.FilingUrl == nil {
		return nil, false
	}
	return o.FilingUrl, true
}

// HasFilingUrl returns a boolean if a field has been set.
func (o *SimilarityIndexInfo) HasFilingUrl() bool {
	if o != nil && o.FilingUrl != nil {
		return true
	}

	return false
}

// SetFilingUrl gets a reference to the given string and assigns it to the FilingUrl field.
func (o *SimilarityIndexInfo) SetFilingUrl(v string) {
	o.FilingUrl = &v
}

func (o SimilarityIndexInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cik != nil {
		toSerialize["cik"] = o.Cik
	}
	if o.Item1 != nil {
		toSerialize["item1"] = o.Item1
	}
	if o.Item1a != nil {
		toSerialize["item1a"] = o.Item1a
	}
	if o.Item2 != nil {
		toSerialize["item2"] = o.Item2
	}
	if o.Item7 != nil {
		toSerialize["item7"] = o.Item7
	}
	if o.Item7a != nil {
		toSerialize["item7a"] = o.Item7a
	}
	if o.AccessNumber != nil {
		toSerialize["accessNumber"] = o.AccessNumber
	}
	if o.Form != nil {
		toSerialize["form"] = o.Form
	}
	if o.FiledDate != nil {
		toSerialize["filedDate"] = o.FiledDate
	}
	if o.AcceptedDate != nil {
		toSerialize["acceptedDate"] = o.AcceptedDate
	}
	if o.ReportUrl != nil {
		toSerialize["reportUrl"] = o.ReportUrl
	}
	if o.FilingUrl != nil {
		toSerialize["filingUrl"] = o.FilingUrl
	}
	return json.Marshal(toSerialize)
}

type NullableSimilarityIndexInfo struct {
	value *SimilarityIndexInfo
	isSet bool
}

func (v NullableSimilarityIndexInfo) Get() *SimilarityIndexInfo {
	return v.value
}

func (v *NullableSimilarityIndexInfo) Set(val *SimilarityIndexInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSimilarityIndexInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSimilarityIndexInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimilarityIndexInfo(val *SimilarityIndexInfo) *NullableSimilarityIndexInfo {
	return &NullableSimilarityIndexInfo{value: val, isSet: true}
}

func (v NullableSimilarityIndexInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimilarityIndexInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


