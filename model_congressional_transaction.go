/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// CongressionalTransaction struct for CongressionalTransaction
type CongressionalTransaction struct {
	// Transaction amount from.
	AmountFrom *float32 `json:"amountFrom,omitempty"`
	// Transaction amount to.
	AmountTo *float32 `json:"amountTo,omitempty"`
	// Asset name.
	AssetName *string `json:"assetName,omitempty"`
	// Filing date.
	FilingDate *string `json:"filingDate,omitempty"`
	// Name of the representative.
	Name *string `json:"name,omitempty"`
	// Owner Type.
	OwnerType *string `json:"ownerType,omitempty"`
	// Position.
	Position *string `json:"position,omitempty"`
	// Symbol.
	Symbol *string `json:"symbol,omitempty"`
	// Transaction date.
	TransactionDate *string `json:"transactionDate,omitempty"`
	// Transaction type <code>Sale</code> or <code>Purchase</code>.
	TransactionType *string `json:"transactionType,omitempty"`
}

// NewCongressionalTransaction instantiates a new CongressionalTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCongressionalTransaction() *CongressionalTransaction {
	this := CongressionalTransaction{}
	return &this
}

// NewCongressionalTransactionWithDefaults instantiates a new CongressionalTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCongressionalTransactionWithDefaults() *CongressionalTransaction {
	this := CongressionalTransaction{}
	return &this
}

// GetAmountFrom returns the AmountFrom field value if set, zero value otherwise.
func (o *CongressionalTransaction) GetAmountFrom() float32 {
	if o == nil || o.AmountFrom == nil {
		var ret float32
		return ret
	}
	return *o.AmountFrom
}

// GetAmountFromOk returns a tuple with the AmountFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CongressionalTransaction) GetAmountFromOk() (*float32, bool) {
	if o == nil || o.AmountFrom == nil {
		return nil, false
	}
	return o.AmountFrom, true
}

// HasAmountFrom returns a boolean if a field has been set.
func (o *CongressionalTransaction) HasAmountFrom() bool {
	if o != nil && o.AmountFrom != nil {
		return true
	}

	return false
}

// SetAmountFrom gets a reference to the given float32 and assigns it to the AmountFrom field.
func (o *CongressionalTransaction) SetAmountFrom(v float32) {
	o.AmountFrom = &v
}

// GetAmountTo returns the AmountTo field value if set, zero value otherwise.
func (o *CongressionalTransaction) GetAmountTo() float32 {
	if o == nil || o.AmountTo == nil {
		var ret float32
		return ret
	}
	return *o.AmountTo
}

// GetAmountToOk returns a tuple with the AmountTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CongressionalTransaction) GetAmountToOk() (*float32, bool) {
	if o == nil || o.AmountTo == nil {
		return nil, false
	}
	return o.AmountTo, true
}

// HasAmountTo returns a boolean if a field has been set.
func (o *CongressionalTransaction) HasAmountTo() bool {
	if o != nil && o.AmountTo != nil {
		return true
	}

	return false
}

// SetAmountTo gets a reference to the given float32 and assigns it to the AmountTo field.
func (o *CongressionalTransaction) SetAmountTo(v float32) {
	o.AmountTo = &v
}

// GetAssetName returns the AssetName field value if set, zero value otherwise.
func (o *CongressionalTransaction) GetAssetName() string {
	if o == nil || o.AssetName == nil {
		var ret string
		return ret
	}
	return *o.AssetName
}

// GetAssetNameOk returns a tuple with the AssetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CongressionalTransaction) GetAssetNameOk() (*string, bool) {
	if o == nil || o.AssetName == nil {
		return nil, false
	}
	return o.AssetName, true
}

// HasAssetName returns a boolean if a field has been set.
func (o *CongressionalTransaction) HasAssetName() bool {
	if o != nil && o.AssetName != nil {
		return true
	}

	return false
}

// SetAssetName gets a reference to the given string and assigns it to the AssetName field.
func (o *CongressionalTransaction) SetAssetName(v string) {
	o.AssetName = &v
}

// GetFilingDate returns the FilingDate field value if set, zero value otherwise.
func (o *CongressionalTransaction) GetFilingDate() string {
	if o == nil || o.FilingDate == nil {
		var ret string
		return ret
	}
	return *o.FilingDate
}

// GetFilingDateOk returns a tuple with the FilingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CongressionalTransaction) GetFilingDateOk() (*string, bool) {
	if o == nil || o.FilingDate == nil {
		return nil, false
	}
	return o.FilingDate, true
}

// HasFilingDate returns a boolean if a field has been set.
func (o *CongressionalTransaction) HasFilingDate() bool {
	if o != nil && o.FilingDate != nil {
		return true
	}

	return false
}

// SetFilingDate gets a reference to the given string and assigns it to the FilingDate field.
func (o *CongressionalTransaction) SetFilingDate(v string) {
	o.FilingDate = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CongressionalTransaction) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CongressionalTransaction) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CongressionalTransaction) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CongressionalTransaction) SetName(v string) {
	o.Name = &v
}

// GetOwnerType returns the OwnerType field value if set, zero value otherwise.
func (o *CongressionalTransaction) GetOwnerType() string {
	if o == nil || o.OwnerType == nil {
		var ret string
		return ret
	}
	return *o.OwnerType
}

// GetOwnerTypeOk returns a tuple with the OwnerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CongressionalTransaction) GetOwnerTypeOk() (*string, bool) {
	if o == nil || o.OwnerType == nil {
		return nil, false
	}
	return o.OwnerType, true
}

// HasOwnerType returns a boolean if a field has been set.
func (o *CongressionalTransaction) HasOwnerType() bool {
	if o != nil && o.OwnerType != nil {
		return true
	}

	return false
}

// SetOwnerType gets a reference to the given string and assigns it to the OwnerType field.
func (o *CongressionalTransaction) SetOwnerType(v string) {
	o.OwnerType = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *CongressionalTransaction) GetPosition() string {
	if o == nil || o.Position == nil {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CongressionalTransaction) GetPositionOk() (*string, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *CongressionalTransaction) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *CongressionalTransaction) SetPosition(v string) {
	o.Position = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *CongressionalTransaction) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CongressionalTransaction) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *CongressionalTransaction) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *CongressionalTransaction) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *CongressionalTransaction) GetTransactionDate() string {
	if o == nil || o.TransactionDate == nil {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CongressionalTransaction) GetTransactionDateOk() (*string, bool) {
	if o == nil || o.TransactionDate == nil {
		return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *CongressionalTransaction) HasTransactionDate() bool {
	if o != nil && o.TransactionDate != nil {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *CongressionalTransaction) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *CongressionalTransaction) GetTransactionType() string {
	if o == nil || o.TransactionType == nil {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CongressionalTransaction) GetTransactionTypeOk() (*string, bool) {
	if o == nil || o.TransactionType == nil {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *CongressionalTransaction) HasTransactionType() bool {
	if o != nil && o.TransactionType != nil {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *CongressionalTransaction) SetTransactionType(v string) {
	o.TransactionType = &v
}

func (o CongressionalTransaction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AmountFrom != nil {
		toSerialize["amountFrom"] = o.AmountFrom
	}
	if o.AmountTo != nil {
		toSerialize["amountTo"] = o.AmountTo
	}
	if o.AssetName != nil {
		toSerialize["assetName"] = o.AssetName
	}
	if o.FilingDate != nil {
		toSerialize["filingDate"] = o.FilingDate
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OwnerType != nil {
		toSerialize["ownerType"] = o.OwnerType
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.TransactionDate != nil {
		toSerialize["transactionDate"] = o.TransactionDate
	}
	if o.TransactionType != nil {
		toSerialize["transactionType"] = o.TransactionType
	}
	return json.Marshal(toSerialize)
}

type NullableCongressionalTransaction struct {
	value *CongressionalTransaction
	isSet bool
}

func (v NullableCongressionalTransaction) Get() *CongressionalTransaction {
	return v.value
}

func (v *NullableCongressionalTransaction) Set(val *CongressionalTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableCongressionalTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableCongressionalTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCongressionalTransaction(val *CongressionalTransaction) *NullableCongressionalTransaction {
	return &NullableCongressionalTransaction{value: val, isSet: true}
}

func (v NullableCongressionalTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCongressionalTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


