/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// UsaSpending struct for UsaSpending
type UsaSpending struct {
	// Symbol.
	Symbol *string `json:"symbol,omitempty"`
	// Company's name.
	RecipientName *string `json:"recipientName,omitempty"`
	// Company's name.
	RecipientParentName *string `json:"recipientParentName,omitempty"`
	// Description.
	AwardDescription *string `json:"awardDescription,omitempty"`
	// Recipient's country.
	Country *string `json:"country,omitempty"`
	// Period.
	ActionDate *string `json:"actionDate,omitempty"`
	// Income reported by lobbying firms.
	TotalValue *float32 `json:"totalValue,omitempty"`
	// Performance start date.
	PerformanceStartDate *string `json:"performanceStartDate,omitempty"`
	// Performance end date.
	PerformanceEndDate *string `json:"performanceEndDate,omitempty"`
	// Award agency.
	AwardingAgencyName *string `json:"awardingAgencyName,omitempty"`
	// Award sub-agency.
	AwardingSubAgencyName *string `json:"awardingSubAgencyName,omitempty"`
	// Award office name.
	AwardingOfficeName *string `json:"awardingOfficeName,omitempty"`
	// Performance country.
	PerformanceCountry *string `json:"performanceCountry,omitempty"`
	// Performance city.
	PerformanceCity *string `json:"performanceCity,omitempty"`
	// Performance county.
	PerformanceCounty *string `json:"performanceCounty,omitempty"`
	// Performance state.
	PerformanceState *string `json:"performanceState,omitempty"`
	// Performance zip code.
	PerformanceZipCode *string `json:"performanceZipCode,omitempty"`
	// Performance congressional district.
	PerformanceCongressionalDistrict *string `json:"performanceCongressionalDistrict,omitempty"`
	// NAICS code.
	NaicsCode *string `json:"naicsCode,omitempty"`
	// Permalink.
	Permalink *string `json:"permalink,omitempty"`
}

// NewUsaSpending instantiates a new UsaSpending object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsaSpending() *UsaSpending {
	this := UsaSpending{}
	return &this
}

// NewUsaSpendingWithDefaults instantiates a new UsaSpending object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsaSpendingWithDefaults() *UsaSpending {
	this := UsaSpending{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *UsaSpending) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *UsaSpending) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *UsaSpending) SetSymbol(v string) {
	o.Symbol = &v
}

// GetRecipientName returns the RecipientName field value if set, zero value otherwise.
func (o *UsaSpending) GetRecipientName() string {
	if o == nil || o.RecipientName == nil {
		var ret string
		return ret
	}
	return *o.RecipientName
}

// GetRecipientNameOk returns a tuple with the RecipientName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetRecipientNameOk() (*string, bool) {
	if o == nil || o.RecipientName == nil {
		return nil, false
	}
	return o.RecipientName, true
}

// HasRecipientName returns a boolean if a field has been set.
func (o *UsaSpending) HasRecipientName() bool {
	if o != nil && o.RecipientName != nil {
		return true
	}

	return false
}

// SetRecipientName gets a reference to the given string and assigns it to the RecipientName field.
func (o *UsaSpending) SetRecipientName(v string) {
	o.RecipientName = &v
}

// GetRecipientParentName returns the RecipientParentName field value if set, zero value otherwise.
func (o *UsaSpending) GetRecipientParentName() string {
	if o == nil || o.RecipientParentName == nil {
		var ret string
		return ret
	}
	return *o.RecipientParentName
}

// GetRecipientParentNameOk returns a tuple with the RecipientParentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetRecipientParentNameOk() (*string, bool) {
	if o == nil || o.RecipientParentName == nil {
		return nil, false
	}
	return o.RecipientParentName, true
}

// HasRecipientParentName returns a boolean if a field has been set.
func (o *UsaSpending) HasRecipientParentName() bool {
	if o != nil && o.RecipientParentName != nil {
		return true
	}

	return false
}

// SetRecipientParentName gets a reference to the given string and assigns it to the RecipientParentName field.
func (o *UsaSpending) SetRecipientParentName(v string) {
	o.RecipientParentName = &v
}

// GetAwardDescription returns the AwardDescription field value if set, zero value otherwise.
func (o *UsaSpending) GetAwardDescription() string {
	if o == nil || o.AwardDescription == nil {
		var ret string
		return ret
	}
	return *o.AwardDescription
}

// GetAwardDescriptionOk returns a tuple with the AwardDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetAwardDescriptionOk() (*string, bool) {
	if o == nil || o.AwardDescription == nil {
		return nil, false
	}
	return o.AwardDescription, true
}

// HasAwardDescription returns a boolean if a field has been set.
func (o *UsaSpending) HasAwardDescription() bool {
	if o != nil && o.AwardDescription != nil {
		return true
	}

	return false
}

// SetAwardDescription gets a reference to the given string and assigns it to the AwardDescription field.
func (o *UsaSpending) SetAwardDescription(v string) {
	o.AwardDescription = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *UsaSpending) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *UsaSpending) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *UsaSpending) SetCountry(v string) {
	o.Country = &v
}

// GetActionDate returns the ActionDate field value if set, zero value otherwise.
func (o *UsaSpending) GetActionDate() string {
	if o == nil || o.ActionDate == nil {
		var ret string
		return ret
	}
	return *o.ActionDate
}

// GetActionDateOk returns a tuple with the ActionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetActionDateOk() (*string, bool) {
	if o == nil || o.ActionDate == nil {
		return nil, false
	}
	return o.ActionDate, true
}

// HasActionDate returns a boolean if a field has been set.
func (o *UsaSpending) HasActionDate() bool {
	if o != nil && o.ActionDate != nil {
		return true
	}

	return false
}

// SetActionDate gets a reference to the given string and assigns it to the ActionDate field.
func (o *UsaSpending) SetActionDate(v string) {
	o.ActionDate = &v
}

// GetTotalValue returns the TotalValue field value if set, zero value otherwise.
func (o *UsaSpending) GetTotalValue() float32 {
	if o == nil || o.TotalValue == nil {
		var ret float32
		return ret
	}
	return *o.TotalValue
}

// GetTotalValueOk returns a tuple with the TotalValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetTotalValueOk() (*float32, bool) {
	if o == nil || o.TotalValue == nil {
		return nil, false
	}
	return o.TotalValue, true
}

// HasTotalValue returns a boolean if a field has been set.
func (o *UsaSpending) HasTotalValue() bool {
	if o != nil && o.TotalValue != nil {
		return true
	}

	return false
}

// SetTotalValue gets a reference to the given float32 and assigns it to the TotalValue field.
func (o *UsaSpending) SetTotalValue(v float32) {
	o.TotalValue = &v
}

// GetPerformanceStartDate returns the PerformanceStartDate field value if set, zero value otherwise.
func (o *UsaSpending) GetPerformanceStartDate() string {
	if o == nil || o.PerformanceStartDate == nil {
		var ret string
		return ret
	}
	return *o.PerformanceStartDate
}

// GetPerformanceStartDateOk returns a tuple with the PerformanceStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetPerformanceStartDateOk() (*string, bool) {
	if o == nil || o.PerformanceStartDate == nil {
		return nil, false
	}
	return o.PerformanceStartDate, true
}

// HasPerformanceStartDate returns a boolean if a field has been set.
func (o *UsaSpending) HasPerformanceStartDate() bool {
	if o != nil && o.PerformanceStartDate != nil {
		return true
	}

	return false
}

// SetPerformanceStartDate gets a reference to the given string and assigns it to the PerformanceStartDate field.
func (o *UsaSpending) SetPerformanceStartDate(v string) {
	o.PerformanceStartDate = &v
}

// GetPerformanceEndDate returns the PerformanceEndDate field value if set, zero value otherwise.
func (o *UsaSpending) GetPerformanceEndDate() string {
	if o == nil || o.PerformanceEndDate == nil {
		var ret string
		return ret
	}
	return *o.PerformanceEndDate
}

// GetPerformanceEndDateOk returns a tuple with the PerformanceEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetPerformanceEndDateOk() (*string, bool) {
	if o == nil || o.PerformanceEndDate == nil {
		return nil, false
	}
	return o.PerformanceEndDate, true
}

// HasPerformanceEndDate returns a boolean if a field has been set.
func (o *UsaSpending) HasPerformanceEndDate() bool {
	if o != nil && o.PerformanceEndDate != nil {
		return true
	}

	return false
}

// SetPerformanceEndDate gets a reference to the given string and assigns it to the PerformanceEndDate field.
func (o *UsaSpending) SetPerformanceEndDate(v string) {
	o.PerformanceEndDate = &v
}

// GetAwardingAgencyName returns the AwardingAgencyName field value if set, zero value otherwise.
func (o *UsaSpending) GetAwardingAgencyName() string {
	if o == nil || o.AwardingAgencyName == nil {
		var ret string
		return ret
	}
	return *o.AwardingAgencyName
}

// GetAwardingAgencyNameOk returns a tuple with the AwardingAgencyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetAwardingAgencyNameOk() (*string, bool) {
	if o == nil || o.AwardingAgencyName == nil {
		return nil, false
	}
	return o.AwardingAgencyName, true
}

// HasAwardingAgencyName returns a boolean if a field has been set.
func (o *UsaSpending) HasAwardingAgencyName() bool {
	if o != nil && o.AwardingAgencyName != nil {
		return true
	}

	return false
}

// SetAwardingAgencyName gets a reference to the given string and assigns it to the AwardingAgencyName field.
func (o *UsaSpending) SetAwardingAgencyName(v string) {
	o.AwardingAgencyName = &v
}

// GetAwardingSubAgencyName returns the AwardingSubAgencyName field value if set, zero value otherwise.
func (o *UsaSpending) GetAwardingSubAgencyName() string {
	if o == nil || o.AwardingSubAgencyName == nil {
		var ret string
		return ret
	}
	return *o.AwardingSubAgencyName
}

// GetAwardingSubAgencyNameOk returns a tuple with the AwardingSubAgencyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetAwardingSubAgencyNameOk() (*string, bool) {
	if o == nil || o.AwardingSubAgencyName == nil {
		return nil, false
	}
	return o.AwardingSubAgencyName, true
}

// HasAwardingSubAgencyName returns a boolean if a field has been set.
func (o *UsaSpending) HasAwardingSubAgencyName() bool {
	if o != nil && o.AwardingSubAgencyName != nil {
		return true
	}

	return false
}

// SetAwardingSubAgencyName gets a reference to the given string and assigns it to the AwardingSubAgencyName field.
func (o *UsaSpending) SetAwardingSubAgencyName(v string) {
	o.AwardingSubAgencyName = &v
}

// GetAwardingOfficeName returns the AwardingOfficeName field value if set, zero value otherwise.
func (o *UsaSpending) GetAwardingOfficeName() string {
	if o == nil || o.AwardingOfficeName == nil {
		var ret string
		return ret
	}
	return *o.AwardingOfficeName
}

// GetAwardingOfficeNameOk returns a tuple with the AwardingOfficeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetAwardingOfficeNameOk() (*string, bool) {
	if o == nil || o.AwardingOfficeName == nil {
		return nil, false
	}
	return o.AwardingOfficeName, true
}

// HasAwardingOfficeName returns a boolean if a field has been set.
func (o *UsaSpending) HasAwardingOfficeName() bool {
	if o != nil && o.AwardingOfficeName != nil {
		return true
	}

	return false
}

// SetAwardingOfficeName gets a reference to the given string and assigns it to the AwardingOfficeName field.
func (o *UsaSpending) SetAwardingOfficeName(v string) {
	o.AwardingOfficeName = &v
}

// GetPerformanceCountry returns the PerformanceCountry field value if set, zero value otherwise.
func (o *UsaSpending) GetPerformanceCountry() string {
	if o == nil || o.PerformanceCountry == nil {
		var ret string
		return ret
	}
	return *o.PerformanceCountry
}

// GetPerformanceCountryOk returns a tuple with the PerformanceCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetPerformanceCountryOk() (*string, bool) {
	if o == nil || o.PerformanceCountry == nil {
		return nil, false
	}
	return o.PerformanceCountry, true
}

// HasPerformanceCountry returns a boolean if a field has been set.
func (o *UsaSpending) HasPerformanceCountry() bool {
	if o != nil && o.PerformanceCountry != nil {
		return true
	}

	return false
}

// SetPerformanceCountry gets a reference to the given string and assigns it to the PerformanceCountry field.
func (o *UsaSpending) SetPerformanceCountry(v string) {
	o.PerformanceCountry = &v
}

// GetPerformanceCity returns the PerformanceCity field value if set, zero value otherwise.
func (o *UsaSpending) GetPerformanceCity() string {
	if o == nil || o.PerformanceCity == nil {
		var ret string
		return ret
	}
	return *o.PerformanceCity
}

// GetPerformanceCityOk returns a tuple with the PerformanceCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetPerformanceCityOk() (*string, bool) {
	if o == nil || o.PerformanceCity == nil {
		return nil, false
	}
	return o.PerformanceCity, true
}

// HasPerformanceCity returns a boolean if a field has been set.
func (o *UsaSpending) HasPerformanceCity() bool {
	if o != nil && o.PerformanceCity != nil {
		return true
	}

	return false
}

// SetPerformanceCity gets a reference to the given string and assigns it to the PerformanceCity field.
func (o *UsaSpending) SetPerformanceCity(v string) {
	o.PerformanceCity = &v
}

// GetPerformanceCounty returns the PerformanceCounty field value if set, zero value otherwise.
func (o *UsaSpending) GetPerformanceCounty() string {
	if o == nil || o.PerformanceCounty == nil {
		var ret string
		return ret
	}
	return *o.PerformanceCounty
}

// GetPerformanceCountyOk returns a tuple with the PerformanceCounty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetPerformanceCountyOk() (*string, bool) {
	if o == nil || o.PerformanceCounty == nil {
		return nil, false
	}
	return o.PerformanceCounty, true
}

// HasPerformanceCounty returns a boolean if a field has been set.
func (o *UsaSpending) HasPerformanceCounty() bool {
	if o != nil && o.PerformanceCounty != nil {
		return true
	}

	return false
}

// SetPerformanceCounty gets a reference to the given string and assigns it to the PerformanceCounty field.
func (o *UsaSpending) SetPerformanceCounty(v string) {
	o.PerformanceCounty = &v
}

// GetPerformanceState returns the PerformanceState field value if set, zero value otherwise.
func (o *UsaSpending) GetPerformanceState() string {
	if o == nil || o.PerformanceState == nil {
		var ret string
		return ret
	}
	return *o.PerformanceState
}

// GetPerformanceStateOk returns a tuple with the PerformanceState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetPerformanceStateOk() (*string, bool) {
	if o == nil || o.PerformanceState == nil {
		return nil, false
	}
	return o.PerformanceState, true
}

// HasPerformanceState returns a boolean if a field has been set.
func (o *UsaSpending) HasPerformanceState() bool {
	if o != nil && o.PerformanceState != nil {
		return true
	}

	return false
}

// SetPerformanceState gets a reference to the given string and assigns it to the PerformanceState field.
func (o *UsaSpending) SetPerformanceState(v string) {
	o.PerformanceState = &v
}

// GetPerformanceZipCode returns the PerformanceZipCode field value if set, zero value otherwise.
func (o *UsaSpending) GetPerformanceZipCode() string {
	if o == nil || o.PerformanceZipCode == nil {
		var ret string
		return ret
	}
	return *o.PerformanceZipCode
}

// GetPerformanceZipCodeOk returns a tuple with the PerformanceZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetPerformanceZipCodeOk() (*string, bool) {
	if o == nil || o.PerformanceZipCode == nil {
		return nil, false
	}
	return o.PerformanceZipCode, true
}

// HasPerformanceZipCode returns a boolean if a field has been set.
func (o *UsaSpending) HasPerformanceZipCode() bool {
	if o != nil && o.PerformanceZipCode != nil {
		return true
	}

	return false
}

// SetPerformanceZipCode gets a reference to the given string and assigns it to the PerformanceZipCode field.
func (o *UsaSpending) SetPerformanceZipCode(v string) {
	o.PerformanceZipCode = &v
}

// GetPerformanceCongressionalDistrict returns the PerformanceCongressionalDistrict field value if set, zero value otherwise.
func (o *UsaSpending) GetPerformanceCongressionalDistrict() string {
	if o == nil || o.PerformanceCongressionalDistrict == nil {
		var ret string
		return ret
	}
	return *o.PerformanceCongressionalDistrict
}

// GetPerformanceCongressionalDistrictOk returns a tuple with the PerformanceCongressionalDistrict field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetPerformanceCongressionalDistrictOk() (*string, bool) {
	if o == nil || o.PerformanceCongressionalDistrict == nil {
		return nil, false
	}
	return o.PerformanceCongressionalDistrict, true
}

// HasPerformanceCongressionalDistrict returns a boolean if a field has been set.
func (o *UsaSpending) HasPerformanceCongressionalDistrict() bool {
	if o != nil && o.PerformanceCongressionalDistrict != nil {
		return true
	}

	return false
}

// SetPerformanceCongressionalDistrict gets a reference to the given string and assigns it to the PerformanceCongressionalDistrict field.
func (o *UsaSpending) SetPerformanceCongressionalDistrict(v string) {
	o.PerformanceCongressionalDistrict = &v
}

// GetNaicsCode returns the NaicsCode field value if set, zero value otherwise.
func (o *UsaSpending) GetNaicsCode() string {
	if o == nil || o.NaicsCode == nil {
		var ret string
		return ret
	}
	return *o.NaicsCode
}

// GetNaicsCodeOk returns a tuple with the NaicsCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetNaicsCodeOk() (*string, bool) {
	if o == nil || o.NaicsCode == nil {
		return nil, false
	}
	return o.NaicsCode, true
}

// HasNaicsCode returns a boolean if a field has been set.
func (o *UsaSpending) HasNaicsCode() bool {
	if o != nil && o.NaicsCode != nil {
		return true
	}

	return false
}

// SetNaicsCode gets a reference to the given string and assigns it to the NaicsCode field.
func (o *UsaSpending) SetNaicsCode(v string) {
	o.NaicsCode = &v
}

// GetPermalink returns the Permalink field value if set, zero value otherwise.
func (o *UsaSpending) GetPermalink() string {
	if o == nil || o.Permalink == nil {
		var ret string
		return ret
	}
	return *o.Permalink
}

// GetPermalinkOk returns a tuple with the Permalink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsaSpending) GetPermalinkOk() (*string, bool) {
	if o == nil || o.Permalink == nil {
		return nil, false
	}
	return o.Permalink, true
}

// HasPermalink returns a boolean if a field has been set.
func (o *UsaSpending) HasPermalink() bool {
	if o != nil && o.Permalink != nil {
		return true
	}

	return false
}

// SetPermalink gets a reference to the given string and assigns it to the Permalink field.
func (o *UsaSpending) SetPermalink(v string) {
	o.Permalink = &v
}

func (o UsaSpending) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.RecipientName != nil {
		toSerialize["recipientName"] = o.RecipientName
	}
	if o.RecipientParentName != nil {
		toSerialize["recipientParentName"] = o.RecipientParentName
	}
	if o.AwardDescription != nil {
		toSerialize["awardDescription"] = o.AwardDescription
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.ActionDate != nil {
		toSerialize["actionDate"] = o.ActionDate
	}
	if o.TotalValue != nil {
		toSerialize["totalValue"] = o.TotalValue
	}
	if o.PerformanceStartDate != nil {
		toSerialize["performanceStartDate"] = o.PerformanceStartDate
	}
	if o.PerformanceEndDate != nil {
		toSerialize["performanceEndDate"] = o.PerformanceEndDate
	}
	if o.AwardingAgencyName != nil {
		toSerialize["awardingAgencyName"] = o.AwardingAgencyName
	}
	if o.AwardingSubAgencyName != nil {
		toSerialize["awardingSubAgencyName"] = o.AwardingSubAgencyName
	}
	if o.AwardingOfficeName != nil {
		toSerialize["awardingOfficeName"] = o.AwardingOfficeName
	}
	if o.PerformanceCountry != nil {
		toSerialize["performanceCountry"] = o.PerformanceCountry
	}
	if o.PerformanceCity != nil {
		toSerialize["performanceCity"] = o.PerformanceCity
	}
	if o.PerformanceCounty != nil {
		toSerialize["performanceCounty"] = o.PerformanceCounty
	}
	if o.PerformanceState != nil {
		toSerialize["performanceState"] = o.PerformanceState
	}
	if o.PerformanceZipCode != nil {
		toSerialize["performanceZipCode"] = o.PerformanceZipCode
	}
	if o.PerformanceCongressionalDistrict != nil {
		toSerialize["performanceCongressionalDistrict"] = o.PerformanceCongressionalDistrict
	}
	if o.NaicsCode != nil {
		toSerialize["naicsCode"] = o.NaicsCode
	}
	if o.Permalink != nil {
		toSerialize["permalink"] = o.Permalink
	}
	return json.Marshal(toSerialize)
}

type NullableUsaSpending struct {
	value *UsaSpending
	isSet bool
}

func (v NullableUsaSpending) Get() *UsaSpending {
	return v.value
}

func (v *NullableUsaSpending) Set(val *UsaSpending) {
	v.value = val
	v.isSet = true
}

func (v NullableUsaSpending) IsSet() bool {
	return v.isSet
}

func (v *NullableUsaSpending) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsaSpending(val *UsaSpending) *NullableUsaSpending {
	return &NullableUsaSpending{value: val, isSet: true}
}

func (v NullableUsaSpending) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsaSpending) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


