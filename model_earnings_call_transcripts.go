/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// EarningsCallTranscripts struct for EarningsCallTranscripts
type EarningsCallTranscripts struct {
	// Company symbol.
	Symbol *string `json:"symbol,omitempty"`
	// Transcript content.
	Transcript *[]TranscriptContent `json:"transcript,omitempty"`
	// Participant list
	Participant *[]TranscriptParticipant `json:"participant,omitempty"`
	// Audio link.
	Audio *string `json:"audio,omitempty"`
	// Transcript's ID.
	Id *string `json:"id,omitempty"`
	// Title.
	Title *string `json:"title,omitempty"`
	// Time of the event.
	Time *string `json:"time,omitempty"`
	// Year of earnings result in the case of earnings call transcript.
	Year *int64 `json:"year,omitempty"`
	// Quarter of earnings result in the case of earnings call transcript.
	Quarter *int64 `json:"quarter,omitempty"`
}

// NewEarningsCallTranscripts instantiates a new EarningsCallTranscripts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEarningsCallTranscripts() *EarningsCallTranscripts {
	this := EarningsCallTranscripts{}
	return &this
}

// NewEarningsCallTranscriptsWithDefaults instantiates a new EarningsCallTranscripts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEarningsCallTranscriptsWithDefaults() *EarningsCallTranscripts {
	this := EarningsCallTranscripts{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *EarningsCallTranscripts) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarningsCallTranscripts) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *EarningsCallTranscripts) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *EarningsCallTranscripts) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTranscript returns the Transcript field value if set, zero value otherwise.
func (o *EarningsCallTranscripts) GetTranscript() []TranscriptContent {
	if o == nil || o.Transcript == nil {
		var ret []TranscriptContent
		return ret
	}
	return *o.Transcript
}

// GetTranscriptOk returns a tuple with the Transcript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarningsCallTranscripts) GetTranscriptOk() (*[]TranscriptContent, bool) {
	if o == nil || o.Transcript == nil {
		return nil, false
	}
	return o.Transcript, true
}

// HasTranscript returns a boolean if a field has been set.
func (o *EarningsCallTranscripts) HasTranscript() bool {
	if o != nil && o.Transcript != nil {
		return true
	}

	return false
}

// SetTranscript gets a reference to the given []TranscriptContent and assigns it to the Transcript field.
func (o *EarningsCallTranscripts) SetTranscript(v []TranscriptContent) {
	o.Transcript = &v
}

// GetParticipant returns the Participant field value if set, zero value otherwise.
func (o *EarningsCallTranscripts) GetParticipant() []TranscriptParticipant {
	if o == nil || o.Participant == nil {
		var ret []TranscriptParticipant
		return ret
	}
	return *o.Participant
}

// GetParticipantOk returns a tuple with the Participant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarningsCallTranscripts) GetParticipantOk() (*[]TranscriptParticipant, bool) {
	if o == nil || o.Participant == nil {
		return nil, false
	}
	return o.Participant, true
}

// HasParticipant returns a boolean if a field has been set.
func (o *EarningsCallTranscripts) HasParticipant() bool {
	if o != nil && o.Participant != nil {
		return true
	}

	return false
}

// SetParticipant gets a reference to the given []TranscriptParticipant and assigns it to the Participant field.
func (o *EarningsCallTranscripts) SetParticipant(v []TranscriptParticipant) {
	o.Participant = &v
}

// GetAudio returns the Audio field value if set, zero value otherwise.
func (o *EarningsCallTranscripts) GetAudio() string {
	if o == nil || o.Audio == nil {
		var ret string
		return ret
	}
	return *o.Audio
}

// GetAudioOk returns a tuple with the Audio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarningsCallTranscripts) GetAudioOk() (*string, bool) {
	if o == nil || o.Audio == nil {
		return nil, false
	}
	return o.Audio, true
}

// HasAudio returns a boolean if a field has been set.
func (o *EarningsCallTranscripts) HasAudio() bool {
	if o != nil && o.Audio != nil {
		return true
	}

	return false
}

// SetAudio gets a reference to the given string and assigns it to the Audio field.
func (o *EarningsCallTranscripts) SetAudio(v string) {
	o.Audio = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EarningsCallTranscripts) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarningsCallTranscripts) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EarningsCallTranscripts) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EarningsCallTranscripts) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *EarningsCallTranscripts) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarningsCallTranscripts) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *EarningsCallTranscripts) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *EarningsCallTranscripts) SetTitle(v string) {
	o.Title = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *EarningsCallTranscripts) GetTime() string {
	if o == nil || o.Time == nil {
		var ret string
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarningsCallTranscripts) GetTimeOk() (*string, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *EarningsCallTranscripts) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given string and assigns it to the Time field.
func (o *EarningsCallTranscripts) SetTime(v string) {
	o.Time = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *EarningsCallTranscripts) GetYear() int64 {
	if o == nil || o.Year == nil {
		var ret int64
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarningsCallTranscripts) GetYearOk() (*int64, bool) {
	if o == nil || o.Year == nil {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *EarningsCallTranscripts) HasYear() bool {
	if o != nil && o.Year != nil {
		return true
	}

	return false
}

// SetYear gets a reference to the given int64 and assigns it to the Year field.
func (o *EarningsCallTranscripts) SetYear(v int64) {
	o.Year = &v
}

// GetQuarter returns the Quarter field value if set, zero value otherwise.
func (o *EarningsCallTranscripts) GetQuarter() int64 {
	if o == nil || o.Quarter == nil {
		var ret int64
		return ret
	}
	return *o.Quarter
}

// GetQuarterOk returns a tuple with the Quarter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarningsCallTranscripts) GetQuarterOk() (*int64, bool) {
	if o == nil || o.Quarter == nil {
		return nil, false
	}
	return o.Quarter, true
}

// HasQuarter returns a boolean if a field has been set.
func (o *EarningsCallTranscripts) HasQuarter() bool {
	if o != nil && o.Quarter != nil {
		return true
	}

	return false
}

// SetQuarter gets a reference to the given int64 and assigns it to the Quarter field.
func (o *EarningsCallTranscripts) SetQuarter(v int64) {
	o.Quarter = &v
}

func (o EarningsCallTranscripts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.Transcript != nil {
		toSerialize["transcript"] = o.Transcript
	}
	if o.Participant != nil {
		toSerialize["participant"] = o.Participant
	}
	if o.Audio != nil {
		toSerialize["audio"] = o.Audio
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	if o.Year != nil {
		toSerialize["year"] = o.Year
	}
	if o.Quarter != nil {
		toSerialize["quarter"] = o.Quarter
	}
	return json.Marshal(toSerialize)
}

type NullableEarningsCallTranscripts struct {
	value *EarningsCallTranscripts
	isSet bool
}

func (v NullableEarningsCallTranscripts) Get() *EarningsCallTranscripts {
	return v.value
}

func (v *NullableEarningsCallTranscripts) Set(val *EarningsCallTranscripts) {
	v.value = val
	v.isSet = true
}

func (v NullableEarningsCallTranscripts) IsSet() bool {
	return v.isSet
}

func (v *NullableEarningsCallTranscripts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEarningsCallTranscripts(val *EarningsCallTranscripts) *NullableEarningsCallTranscripts {
	return &NullableEarningsCallTranscripts{value: val, isSet: true}
}

func (v NullableEarningsCallTranscripts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEarningsCallTranscripts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


