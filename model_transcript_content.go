/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// TranscriptContent struct for TranscriptContent
type TranscriptContent struct {
	// Speaker's name
	Name *string `json:"name,omitempty"`
	// Speaker's speech
	Speech *[]string `json:"speech,omitempty"`
	// Earnings calls section (management discussion or Q&A)
	Session *string `json:"session,omitempty"`
}

// NewTranscriptContent instantiates a new TranscriptContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranscriptContent() *TranscriptContent {
	this := TranscriptContent{}
	return &this
}

// NewTranscriptContentWithDefaults instantiates a new TranscriptContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranscriptContentWithDefaults() *TranscriptContent {
	this := TranscriptContent{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TranscriptContent) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptContent) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TranscriptContent) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TranscriptContent) SetName(v string) {
	o.Name = &v
}

// GetSpeech returns the Speech field value if set, zero value otherwise.
func (o *TranscriptContent) GetSpeech() []string {
	if o == nil || o.Speech == nil {
		var ret []string
		return ret
	}
	return *o.Speech
}

// GetSpeechOk returns a tuple with the Speech field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptContent) GetSpeechOk() (*[]string, bool) {
	if o == nil || o.Speech == nil {
		return nil, false
	}
	return o.Speech, true
}

// HasSpeech returns a boolean if a field has been set.
func (o *TranscriptContent) HasSpeech() bool {
	if o != nil && o.Speech != nil {
		return true
	}

	return false
}

// SetSpeech gets a reference to the given []string and assigns it to the Speech field.
func (o *TranscriptContent) SetSpeech(v []string) {
	o.Speech = &v
}

// GetSession returns the Session field value if set, zero value otherwise.
func (o *TranscriptContent) GetSession() string {
	if o == nil || o.Session == nil {
		var ret string
		return ret
	}
	return *o.Session
}

// GetSessionOk returns a tuple with the Session field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptContent) GetSessionOk() (*string, bool) {
	if o == nil || o.Session == nil {
		return nil, false
	}
	return o.Session, true
}

// HasSession returns a boolean if a field has been set.
func (o *TranscriptContent) HasSession() bool {
	if o != nil && o.Session != nil {
		return true
	}

	return false
}

// SetSession gets a reference to the given string and assigns it to the Session field.
func (o *TranscriptContent) SetSession(v string) {
	o.Session = &v
}

func (o TranscriptContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Speech != nil {
		toSerialize["speech"] = o.Speech
	}
	if o.Session != nil {
		toSerialize["session"] = o.Session
	}
	return json.Marshal(toSerialize)
}

type NullableTranscriptContent struct {
	value *TranscriptContent
	isSet bool
}

func (v NullableTranscriptContent) Get() *TranscriptContent {
	return v.value
}

func (v *NullableTranscriptContent) Set(val *TranscriptContent) {
	v.value = val
	v.isSet = true
}

func (v NullableTranscriptContent) IsSet() bool {
	return v.isSet
}

func (v *NullableTranscriptContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranscriptContent(val *TranscriptContent) *NullableTranscriptContent {
	return &NullableTranscriptContent{value: val, isSet: true}
}

func (v NullableTranscriptContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranscriptContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


