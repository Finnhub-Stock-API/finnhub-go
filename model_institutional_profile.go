/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// InstitutionalProfile struct for InstitutionalProfile
type InstitutionalProfile struct {
	// CIK.
	Cik *string `json:"cik,omitempty"`
	// Array of investors.
	Data *[]InstitutionalProfileInfo `json:"data,omitempty"`
}

// NewInstitutionalProfile instantiates a new InstitutionalProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstitutionalProfile() *InstitutionalProfile {
	this := InstitutionalProfile{}
	return &this
}

// NewInstitutionalProfileWithDefaults instantiates a new InstitutionalProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstitutionalProfileWithDefaults() *InstitutionalProfile {
	this := InstitutionalProfile{}
	return &this
}

// GetCik returns the Cik field value if set, zero value otherwise.
func (o *InstitutionalProfile) GetCik() string {
	if o == nil || o.Cik == nil {
		var ret string
		return ret
	}
	return *o.Cik
}

// GetCikOk returns a tuple with the Cik field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionalProfile) GetCikOk() (*string, bool) {
	if o == nil || o.Cik == nil {
		return nil, false
	}
	return o.Cik, true
}

// HasCik returns a boolean if a field has been set.
func (o *InstitutionalProfile) HasCik() bool {
	if o != nil && o.Cik != nil {
		return true
	}

	return false
}

// SetCik gets a reference to the given string and assigns it to the Cik field.
func (o *InstitutionalProfile) SetCik(v string) {
	o.Cik = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *InstitutionalProfile) GetData() []InstitutionalProfileInfo {
	if o == nil || o.Data == nil {
		var ret []InstitutionalProfileInfo
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionalProfile) GetDataOk() (*[]InstitutionalProfileInfo, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *InstitutionalProfile) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []InstitutionalProfileInfo and assigns it to the Data field.
func (o *InstitutionalProfile) SetData(v []InstitutionalProfileInfo) {
	o.Data = &v
}

func (o InstitutionalProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cik != nil {
		toSerialize["cik"] = o.Cik
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableInstitutionalProfile struct {
	value *InstitutionalProfile
	isSet bool
}

func (v NullableInstitutionalProfile) Get() *InstitutionalProfile {
	return v.value
}

func (v *NullableInstitutionalProfile) Set(val *InstitutionalProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableInstitutionalProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableInstitutionalProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstitutionalProfile(val *InstitutionalProfile) *NullableInstitutionalProfile {
	return &NullableInstitutionalProfile{value: val, isSet: true}
}

func (v NullableInstitutionalProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstitutionalProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


