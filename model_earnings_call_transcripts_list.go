/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// EarningsCallTranscriptsList struct for EarningsCallTranscriptsList
type EarningsCallTranscriptsList struct {
	// Company symbol.
	Symbol *string `json:"symbol,omitempty"`
	// Array of transcripts' metadata
	Transcripts *[]StockTranscripts `json:"transcripts,omitempty"`
}

// NewEarningsCallTranscriptsList instantiates a new EarningsCallTranscriptsList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEarningsCallTranscriptsList() *EarningsCallTranscriptsList {
	this := EarningsCallTranscriptsList{}
	return &this
}

// NewEarningsCallTranscriptsListWithDefaults instantiates a new EarningsCallTranscriptsList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEarningsCallTranscriptsListWithDefaults() *EarningsCallTranscriptsList {
	this := EarningsCallTranscriptsList{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *EarningsCallTranscriptsList) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarningsCallTranscriptsList) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *EarningsCallTranscriptsList) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *EarningsCallTranscriptsList) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTranscripts returns the Transcripts field value if set, zero value otherwise.
func (o *EarningsCallTranscriptsList) GetTranscripts() []StockTranscripts {
	if o == nil || o.Transcripts == nil {
		var ret []StockTranscripts
		return ret
	}
	return *o.Transcripts
}

// GetTranscriptsOk returns a tuple with the Transcripts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarningsCallTranscriptsList) GetTranscriptsOk() (*[]StockTranscripts, bool) {
	if o == nil || o.Transcripts == nil {
		return nil, false
	}
	return o.Transcripts, true
}

// HasTranscripts returns a boolean if a field has been set.
func (o *EarningsCallTranscriptsList) HasTranscripts() bool {
	if o != nil && o.Transcripts != nil {
		return true
	}

	return false
}

// SetTranscripts gets a reference to the given []StockTranscripts and assigns it to the Transcripts field.
func (o *EarningsCallTranscriptsList) SetTranscripts(v []StockTranscripts) {
	o.Transcripts = &v
}

func (o EarningsCallTranscriptsList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.Transcripts != nil {
		toSerialize["transcripts"] = o.Transcripts
	}
	return json.Marshal(toSerialize)
}

type NullableEarningsCallTranscriptsList struct {
	value *EarningsCallTranscriptsList
	isSet bool
}

func (v NullableEarningsCallTranscriptsList) Get() *EarningsCallTranscriptsList {
	return v.value
}

func (v *NullableEarningsCallTranscriptsList) Set(val *EarningsCallTranscriptsList) {
	v.value = val
	v.isSet = true
}

func (v NullableEarningsCallTranscriptsList) IsSet() bool {
	return v.isSet
}

func (v *NullableEarningsCallTranscriptsList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEarningsCallTranscriptsList(val *EarningsCallTranscriptsList) *NullableEarningsCallTranscriptsList {
	return &NullableEarningsCallTranscriptsList{value: val, isSet: true}
}

func (v NullableEarningsCallTranscriptsList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEarningsCallTranscriptsList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


