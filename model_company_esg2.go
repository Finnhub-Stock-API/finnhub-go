/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// CompanyESG2 struct for CompanyESG2
type CompanyESG2 struct {
	// Total ESG Score
	TotalESGScore *float32 `json:"totalESGScore,omitempty"`
	// Environment Score
	EnvironmentScore *float32 `json:"environmentScore,omitempty"`
	// Governance Score
	GovernanceScore *float32 `json:"governanceScore,omitempty"`
	// Social Score
	SocialScore *float32 `json:"socialScore,omitempty"`
	Data *map[string]interface{} `json:"data,omitempty"`
	// Period
	Period *string `json:"period,omitempty"`
}

// NewCompanyESG2 instantiates a new CompanyESG2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyESG2() *CompanyESG2 {
	this := CompanyESG2{}
	return &this
}

// NewCompanyESG2WithDefaults instantiates a new CompanyESG2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyESG2WithDefaults() *CompanyESG2 {
	this := CompanyESG2{}
	return &this
}

// GetTotalESGScore returns the TotalESGScore field value if set, zero value otherwise.
func (o *CompanyESG2) GetTotalESGScore() float32 {
	if o == nil || o.TotalESGScore == nil {
		var ret float32
		return ret
	}
	return *o.TotalESGScore
}

// GetTotalESGScoreOk returns a tuple with the TotalESGScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyESG2) GetTotalESGScoreOk() (*float32, bool) {
	if o == nil || o.TotalESGScore == nil {
		return nil, false
	}
	return o.TotalESGScore, true
}

// HasTotalESGScore returns a boolean if a field has been set.
func (o *CompanyESG2) HasTotalESGScore() bool {
	if o != nil && o.TotalESGScore != nil {
		return true
	}

	return false
}

// SetTotalESGScore gets a reference to the given float32 and assigns it to the TotalESGScore field.
func (o *CompanyESG2) SetTotalESGScore(v float32) {
	o.TotalESGScore = &v
}

// GetEnvironmentScore returns the EnvironmentScore field value if set, zero value otherwise.
func (o *CompanyESG2) GetEnvironmentScore() float32 {
	if o == nil || o.EnvironmentScore == nil {
		var ret float32
		return ret
	}
	return *o.EnvironmentScore
}

// GetEnvironmentScoreOk returns a tuple with the EnvironmentScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyESG2) GetEnvironmentScoreOk() (*float32, bool) {
	if o == nil || o.EnvironmentScore == nil {
		return nil, false
	}
	return o.EnvironmentScore, true
}

// HasEnvironmentScore returns a boolean if a field has been set.
func (o *CompanyESG2) HasEnvironmentScore() bool {
	if o != nil && o.EnvironmentScore != nil {
		return true
	}

	return false
}

// SetEnvironmentScore gets a reference to the given float32 and assigns it to the EnvironmentScore field.
func (o *CompanyESG2) SetEnvironmentScore(v float32) {
	o.EnvironmentScore = &v
}

// GetGovernanceScore returns the GovernanceScore field value if set, zero value otherwise.
func (o *CompanyESG2) GetGovernanceScore() float32 {
	if o == nil || o.GovernanceScore == nil {
		var ret float32
		return ret
	}
	return *o.GovernanceScore
}

// GetGovernanceScoreOk returns a tuple with the GovernanceScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyESG2) GetGovernanceScoreOk() (*float32, bool) {
	if o == nil || o.GovernanceScore == nil {
		return nil, false
	}
	return o.GovernanceScore, true
}

// HasGovernanceScore returns a boolean if a field has been set.
func (o *CompanyESG2) HasGovernanceScore() bool {
	if o != nil && o.GovernanceScore != nil {
		return true
	}

	return false
}

// SetGovernanceScore gets a reference to the given float32 and assigns it to the GovernanceScore field.
func (o *CompanyESG2) SetGovernanceScore(v float32) {
	o.GovernanceScore = &v
}

// GetSocialScore returns the SocialScore field value if set, zero value otherwise.
func (o *CompanyESG2) GetSocialScore() float32 {
	if o == nil || o.SocialScore == nil {
		var ret float32
		return ret
	}
	return *o.SocialScore
}

// GetSocialScoreOk returns a tuple with the SocialScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyESG2) GetSocialScoreOk() (*float32, bool) {
	if o == nil || o.SocialScore == nil {
		return nil, false
	}
	return o.SocialScore, true
}

// HasSocialScore returns a boolean if a field has been set.
func (o *CompanyESG2) HasSocialScore() bool {
	if o != nil && o.SocialScore != nil {
		return true
	}

	return false
}

// SetSocialScore gets a reference to the given float32 and assigns it to the SocialScore field.
func (o *CompanyESG2) SetSocialScore(v float32) {
	o.SocialScore = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *CompanyESG2) GetData() map[string]interface{} {
	if o == nil || o.Data == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyESG2) GetDataOk() (*map[string]interface{}, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *CompanyESG2) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *CompanyESG2) SetData(v map[string]interface{}) {
	o.Data = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *CompanyESG2) GetPeriod() string {
	if o == nil || o.Period == nil {
		var ret string
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyESG2) GetPeriodOk() (*string, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *CompanyESG2) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given string and assigns it to the Period field.
func (o *CompanyESG2) SetPeriod(v string) {
	o.Period = &v
}

func (o CompanyESG2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalESGScore != nil {
		toSerialize["totalESGScore"] = o.TotalESGScore
	}
	if o.EnvironmentScore != nil {
		toSerialize["environmentScore"] = o.EnvironmentScore
	}
	if o.GovernanceScore != nil {
		toSerialize["governanceScore"] = o.GovernanceScore
	}
	if o.SocialScore != nil {
		toSerialize["socialScore"] = o.SocialScore
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyESG2 struct {
	value *CompanyESG2
	isSet bool
}

func (v NullableCompanyESG2) Get() *CompanyESG2 {
	return v.value
}

func (v *NullableCompanyESG2) Set(val *CompanyESG2) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyESG2) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyESG2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyESG2(val *CompanyESG2) *NullableCompanyESG2 {
	return &NullableCompanyESG2{value: val, isSet: true}
}

func (v NullableCompanyESG2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyESG2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


