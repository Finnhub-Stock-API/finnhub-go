/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// CryptoProfile struct for CryptoProfile
type CryptoProfile struct {
	// Long name.
	LongName *string `json:"longName,omitempty"`
	// Name.
	Name *string `json:"name,omitempty"`
	// Description.
	Description *string `json:"description,omitempty"`
	// Project's website.
	Website *string `json:"website,omitempty"`
	// Market capitalization.
	MarketCap *float32 `json:"marketCap,omitempty"`
	// Total supply.
	TotalSupply *float32 `json:"totalSupply,omitempty"`
	// Max supply.
	MaxSupply *float32 `json:"maxSupply,omitempty"`
	// Circulating supply.
	CirculatingSupply *float32 `json:"circulatingSupply,omitempty"`
	// Logo image.
	Logo *string `json:"logo,omitempty"`
	// Launch date.
	LaunchDate *string `json:"launchDate,omitempty"`
	// Proof type.
	ProofType *string `json:"proofType,omitempty"`
}

// NewCryptoProfile instantiates a new CryptoProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCryptoProfile() *CryptoProfile {
	this := CryptoProfile{}
	return &this
}

// NewCryptoProfileWithDefaults instantiates a new CryptoProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCryptoProfileWithDefaults() *CryptoProfile {
	this := CryptoProfile{}
	return &this
}

// GetLongName returns the LongName field value if set, zero value otherwise.
func (o *CryptoProfile) GetLongName() string {
	if o == nil || o.LongName == nil {
		var ret string
		return ret
	}
	return *o.LongName
}

// GetLongNameOk returns a tuple with the LongName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoProfile) GetLongNameOk() (*string, bool) {
	if o == nil || o.LongName == nil {
		return nil, false
	}
	return o.LongName, true
}

// HasLongName returns a boolean if a field has been set.
func (o *CryptoProfile) HasLongName() bool {
	if o != nil && o.LongName != nil {
		return true
	}

	return false
}

// SetLongName gets a reference to the given string and assigns it to the LongName field.
func (o *CryptoProfile) SetLongName(v string) {
	o.LongName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CryptoProfile) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoProfile) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CryptoProfile) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CryptoProfile) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CryptoProfile) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoProfile) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CryptoProfile) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CryptoProfile) SetDescription(v string) {
	o.Description = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *CryptoProfile) GetWebsite() string {
	if o == nil || o.Website == nil {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoProfile) GetWebsiteOk() (*string, bool) {
	if o == nil || o.Website == nil {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *CryptoProfile) HasWebsite() bool {
	if o != nil && o.Website != nil {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *CryptoProfile) SetWebsite(v string) {
	o.Website = &v
}

// GetMarketCap returns the MarketCap field value if set, zero value otherwise.
func (o *CryptoProfile) GetMarketCap() float32 {
	if o == nil || o.MarketCap == nil {
		var ret float32
		return ret
	}
	return *o.MarketCap
}

// GetMarketCapOk returns a tuple with the MarketCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoProfile) GetMarketCapOk() (*float32, bool) {
	if o == nil || o.MarketCap == nil {
		return nil, false
	}
	return o.MarketCap, true
}

// HasMarketCap returns a boolean if a field has been set.
func (o *CryptoProfile) HasMarketCap() bool {
	if o != nil && o.MarketCap != nil {
		return true
	}

	return false
}

// SetMarketCap gets a reference to the given float32 and assigns it to the MarketCap field.
func (o *CryptoProfile) SetMarketCap(v float32) {
	o.MarketCap = &v
}

// GetTotalSupply returns the TotalSupply field value if set, zero value otherwise.
func (o *CryptoProfile) GetTotalSupply() float32 {
	if o == nil || o.TotalSupply == nil {
		var ret float32
		return ret
	}
	return *o.TotalSupply
}

// GetTotalSupplyOk returns a tuple with the TotalSupply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoProfile) GetTotalSupplyOk() (*float32, bool) {
	if o == nil || o.TotalSupply == nil {
		return nil, false
	}
	return o.TotalSupply, true
}

// HasTotalSupply returns a boolean if a field has been set.
func (o *CryptoProfile) HasTotalSupply() bool {
	if o != nil && o.TotalSupply != nil {
		return true
	}

	return false
}

// SetTotalSupply gets a reference to the given float32 and assigns it to the TotalSupply field.
func (o *CryptoProfile) SetTotalSupply(v float32) {
	o.TotalSupply = &v
}

// GetMaxSupply returns the MaxSupply field value if set, zero value otherwise.
func (o *CryptoProfile) GetMaxSupply() float32 {
	if o == nil || o.MaxSupply == nil {
		var ret float32
		return ret
	}
	return *o.MaxSupply
}

// GetMaxSupplyOk returns a tuple with the MaxSupply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoProfile) GetMaxSupplyOk() (*float32, bool) {
	if o == nil || o.MaxSupply == nil {
		return nil, false
	}
	return o.MaxSupply, true
}

// HasMaxSupply returns a boolean if a field has been set.
func (o *CryptoProfile) HasMaxSupply() bool {
	if o != nil && o.MaxSupply != nil {
		return true
	}

	return false
}

// SetMaxSupply gets a reference to the given float32 and assigns it to the MaxSupply field.
func (o *CryptoProfile) SetMaxSupply(v float32) {
	o.MaxSupply = &v
}

// GetCirculatingSupply returns the CirculatingSupply field value if set, zero value otherwise.
func (o *CryptoProfile) GetCirculatingSupply() float32 {
	if o == nil || o.CirculatingSupply == nil {
		var ret float32
		return ret
	}
	return *o.CirculatingSupply
}

// GetCirculatingSupplyOk returns a tuple with the CirculatingSupply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoProfile) GetCirculatingSupplyOk() (*float32, bool) {
	if o == nil || o.CirculatingSupply == nil {
		return nil, false
	}
	return o.CirculatingSupply, true
}

// HasCirculatingSupply returns a boolean if a field has been set.
func (o *CryptoProfile) HasCirculatingSupply() bool {
	if o != nil && o.CirculatingSupply != nil {
		return true
	}

	return false
}

// SetCirculatingSupply gets a reference to the given float32 and assigns it to the CirculatingSupply field.
func (o *CryptoProfile) SetCirculatingSupply(v float32) {
	o.CirculatingSupply = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *CryptoProfile) GetLogo() string {
	if o == nil || o.Logo == nil {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoProfile) GetLogoOk() (*string, bool) {
	if o == nil || o.Logo == nil {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *CryptoProfile) HasLogo() bool {
	if o != nil && o.Logo != nil {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *CryptoProfile) SetLogo(v string) {
	o.Logo = &v
}

// GetLaunchDate returns the LaunchDate field value if set, zero value otherwise.
func (o *CryptoProfile) GetLaunchDate() string {
	if o == nil || o.LaunchDate == nil {
		var ret string
		return ret
	}
	return *o.LaunchDate
}

// GetLaunchDateOk returns a tuple with the LaunchDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoProfile) GetLaunchDateOk() (*string, bool) {
	if o == nil || o.LaunchDate == nil {
		return nil, false
	}
	return o.LaunchDate, true
}

// HasLaunchDate returns a boolean if a field has been set.
func (o *CryptoProfile) HasLaunchDate() bool {
	if o != nil && o.LaunchDate != nil {
		return true
	}

	return false
}

// SetLaunchDate gets a reference to the given string and assigns it to the LaunchDate field.
func (o *CryptoProfile) SetLaunchDate(v string) {
	o.LaunchDate = &v
}

// GetProofType returns the ProofType field value if set, zero value otherwise.
func (o *CryptoProfile) GetProofType() string {
	if o == nil || o.ProofType == nil {
		var ret string
		return ret
	}
	return *o.ProofType
}

// GetProofTypeOk returns a tuple with the ProofType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoProfile) GetProofTypeOk() (*string, bool) {
	if o == nil || o.ProofType == nil {
		return nil, false
	}
	return o.ProofType, true
}

// HasProofType returns a boolean if a field has been set.
func (o *CryptoProfile) HasProofType() bool {
	if o != nil && o.ProofType != nil {
		return true
	}

	return false
}

// SetProofType gets a reference to the given string and assigns it to the ProofType field.
func (o *CryptoProfile) SetProofType(v string) {
	o.ProofType = &v
}

func (o CryptoProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LongName != nil {
		toSerialize["longName"] = o.LongName
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Website != nil {
		toSerialize["website"] = o.Website
	}
	if o.MarketCap != nil {
		toSerialize["marketCap"] = o.MarketCap
	}
	if o.TotalSupply != nil {
		toSerialize["totalSupply"] = o.TotalSupply
	}
	if o.MaxSupply != nil {
		toSerialize["maxSupply"] = o.MaxSupply
	}
	if o.CirculatingSupply != nil {
		toSerialize["circulatingSupply"] = o.CirculatingSupply
	}
	if o.Logo != nil {
		toSerialize["logo"] = o.Logo
	}
	if o.LaunchDate != nil {
		toSerialize["launchDate"] = o.LaunchDate
	}
	if o.ProofType != nil {
		toSerialize["proofType"] = o.ProofType
	}
	return json.Marshal(toSerialize)
}

type NullableCryptoProfile struct {
	value *CryptoProfile
	isSet bool
}

func (v NullableCryptoProfile) Get() *CryptoProfile {
	return v.value
}

func (v *NullableCryptoProfile) Set(val *CryptoProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableCryptoProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableCryptoProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCryptoProfile(val *CryptoProfile) *NullableCryptoProfile {
	return &NullableCryptoProfile{value: val, isSet: true}
}

func (v NullableCryptoProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCryptoProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


