/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// EbitEstimatesInfo struct for EbitEstimatesInfo
type EbitEstimatesInfo struct {
	// Average EBIT estimates including Finnhub's proprietary estimates.
	EbitAvg *float32 `json:"ebitAvg,omitempty"`
	// Highest estimate.
	EbitHigh *float32 `json:"ebitHigh,omitempty"`
	// Lowest estimate.
	EbitLow *float32 `json:"ebitLow,omitempty"`
	// Number of Analysts.
	NumberAnalysts *int64 `json:"numberAnalysts,omitempty"`
	// Period.
	Period *string `json:"period,omitempty"`
}

// NewEbitEstimatesInfo instantiates a new EbitEstimatesInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEbitEstimatesInfo() *EbitEstimatesInfo {
	this := EbitEstimatesInfo{}
	return &this
}

// NewEbitEstimatesInfoWithDefaults instantiates a new EbitEstimatesInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEbitEstimatesInfoWithDefaults() *EbitEstimatesInfo {
	this := EbitEstimatesInfo{}
	return &this
}

// GetEbitAvg returns the EbitAvg field value if set, zero value otherwise.
func (o *EbitEstimatesInfo) GetEbitAvg() float32 {
	if o == nil || o.EbitAvg == nil {
		var ret float32
		return ret
	}
	return *o.EbitAvg
}

// GetEbitAvgOk returns a tuple with the EbitAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EbitEstimatesInfo) GetEbitAvgOk() (*float32, bool) {
	if o == nil || o.EbitAvg == nil {
		return nil, false
	}
	return o.EbitAvg, true
}

// HasEbitAvg returns a boolean if a field has been set.
func (o *EbitEstimatesInfo) HasEbitAvg() bool {
	if o != nil && o.EbitAvg != nil {
		return true
	}

	return false
}

// SetEbitAvg gets a reference to the given float32 and assigns it to the EbitAvg field.
func (o *EbitEstimatesInfo) SetEbitAvg(v float32) {
	o.EbitAvg = &v
}

// GetEbitHigh returns the EbitHigh field value if set, zero value otherwise.
func (o *EbitEstimatesInfo) GetEbitHigh() float32 {
	if o == nil || o.EbitHigh == nil {
		var ret float32
		return ret
	}
	return *o.EbitHigh
}

// GetEbitHighOk returns a tuple with the EbitHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EbitEstimatesInfo) GetEbitHighOk() (*float32, bool) {
	if o == nil || o.EbitHigh == nil {
		return nil, false
	}
	return o.EbitHigh, true
}

// HasEbitHigh returns a boolean if a field has been set.
func (o *EbitEstimatesInfo) HasEbitHigh() bool {
	if o != nil && o.EbitHigh != nil {
		return true
	}

	return false
}

// SetEbitHigh gets a reference to the given float32 and assigns it to the EbitHigh field.
func (o *EbitEstimatesInfo) SetEbitHigh(v float32) {
	o.EbitHigh = &v
}

// GetEbitLow returns the EbitLow field value if set, zero value otherwise.
func (o *EbitEstimatesInfo) GetEbitLow() float32 {
	if o == nil || o.EbitLow == nil {
		var ret float32
		return ret
	}
	return *o.EbitLow
}

// GetEbitLowOk returns a tuple with the EbitLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EbitEstimatesInfo) GetEbitLowOk() (*float32, bool) {
	if o == nil || o.EbitLow == nil {
		return nil, false
	}
	return o.EbitLow, true
}

// HasEbitLow returns a boolean if a field has been set.
func (o *EbitEstimatesInfo) HasEbitLow() bool {
	if o != nil && o.EbitLow != nil {
		return true
	}

	return false
}

// SetEbitLow gets a reference to the given float32 and assigns it to the EbitLow field.
func (o *EbitEstimatesInfo) SetEbitLow(v float32) {
	o.EbitLow = &v
}

// GetNumberAnalysts returns the NumberAnalysts field value if set, zero value otherwise.
func (o *EbitEstimatesInfo) GetNumberAnalysts() int64 {
	if o == nil || o.NumberAnalysts == nil {
		var ret int64
		return ret
	}
	return *o.NumberAnalysts
}

// GetNumberAnalystsOk returns a tuple with the NumberAnalysts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EbitEstimatesInfo) GetNumberAnalystsOk() (*int64, bool) {
	if o == nil || o.NumberAnalysts == nil {
		return nil, false
	}
	return o.NumberAnalysts, true
}

// HasNumberAnalysts returns a boolean if a field has been set.
func (o *EbitEstimatesInfo) HasNumberAnalysts() bool {
	if o != nil && o.NumberAnalysts != nil {
		return true
	}

	return false
}

// SetNumberAnalysts gets a reference to the given int64 and assigns it to the NumberAnalysts field.
func (o *EbitEstimatesInfo) SetNumberAnalysts(v int64) {
	o.NumberAnalysts = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *EbitEstimatesInfo) GetPeriod() string {
	if o == nil || o.Period == nil {
		var ret string
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EbitEstimatesInfo) GetPeriodOk() (*string, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *EbitEstimatesInfo) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given string and assigns it to the Period field.
func (o *EbitEstimatesInfo) SetPeriod(v string) {
	o.Period = &v
}

func (o EbitEstimatesInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EbitAvg != nil {
		toSerialize["ebitAvg"] = o.EbitAvg
	}
	if o.EbitHigh != nil {
		toSerialize["ebitHigh"] = o.EbitHigh
	}
	if o.EbitLow != nil {
		toSerialize["ebitLow"] = o.EbitLow
	}
	if o.NumberAnalysts != nil {
		toSerialize["numberAnalysts"] = o.NumberAnalysts
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	return json.Marshal(toSerialize)
}

type NullableEbitEstimatesInfo struct {
	value *EbitEstimatesInfo
	isSet bool
}

func (v NullableEbitEstimatesInfo) Get() *EbitEstimatesInfo {
	return v.value
}

func (v *NullableEbitEstimatesInfo) Set(val *EbitEstimatesInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableEbitEstimatesInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableEbitEstimatesInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEbitEstimatesInfo(val *EbitEstimatesInfo) *NullableEbitEstimatesInfo {
	return &NullableEbitEstimatesInfo{value: val, isSet: true}
}

func (v NullableEbitEstimatesInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEbitEstimatesInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


