/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// FDAComitteeMeeting struct for FDAComitteeMeeting
type FDAComitteeMeeting struct {
	// Start time of the event in EST.
	FromDate *string `json:"fromDate,omitempty"`
	// End time of the event in EST.
	ToDate *string `json:"toDate,omitempty"`
	// Event's description.
	EventDescription *string `json:"eventDescription,omitempty"`
	// URL.
	Url *string `json:"url,omitempty"`
}

// NewFDAComitteeMeeting instantiates a new FDAComitteeMeeting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFDAComitteeMeeting() *FDAComitteeMeeting {
	this := FDAComitteeMeeting{}
	return &this
}

// NewFDAComitteeMeetingWithDefaults instantiates a new FDAComitteeMeeting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFDAComitteeMeetingWithDefaults() *FDAComitteeMeeting {
	this := FDAComitteeMeeting{}
	return &this
}

// GetFromDate returns the FromDate field value if set, zero value otherwise.
func (o *FDAComitteeMeeting) GetFromDate() string {
	if o == nil || o.FromDate == nil {
		var ret string
		return ret
	}
	return *o.FromDate
}

// GetFromDateOk returns a tuple with the FromDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FDAComitteeMeeting) GetFromDateOk() (*string, bool) {
	if o == nil || o.FromDate == nil {
		return nil, false
	}
	return o.FromDate, true
}

// HasFromDate returns a boolean if a field has been set.
func (o *FDAComitteeMeeting) HasFromDate() bool {
	if o != nil && o.FromDate != nil {
		return true
	}

	return false
}

// SetFromDate gets a reference to the given string and assigns it to the FromDate field.
func (o *FDAComitteeMeeting) SetFromDate(v string) {
	o.FromDate = &v
}

// GetToDate returns the ToDate field value if set, zero value otherwise.
func (o *FDAComitteeMeeting) GetToDate() string {
	if o == nil || o.ToDate == nil {
		var ret string
		return ret
	}
	return *o.ToDate
}

// GetToDateOk returns a tuple with the ToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FDAComitteeMeeting) GetToDateOk() (*string, bool) {
	if o == nil || o.ToDate == nil {
		return nil, false
	}
	return o.ToDate, true
}

// HasToDate returns a boolean if a field has been set.
func (o *FDAComitteeMeeting) HasToDate() bool {
	if o != nil && o.ToDate != nil {
		return true
	}

	return false
}

// SetToDate gets a reference to the given string and assigns it to the ToDate field.
func (o *FDAComitteeMeeting) SetToDate(v string) {
	o.ToDate = &v
}

// GetEventDescription returns the EventDescription field value if set, zero value otherwise.
func (o *FDAComitteeMeeting) GetEventDescription() string {
	if o == nil || o.EventDescription == nil {
		var ret string
		return ret
	}
	return *o.EventDescription
}

// GetEventDescriptionOk returns a tuple with the EventDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FDAComitteeMeeting) GetEventDescriptionOk() (*string, bool) {
	if o == nil || o.EventDescription == nil {
		return nil, false
	}
	return o.EventDescription, true
}

// HasEventDescription returns a boolean if a field has been set.
func (o *FDAComitteeMeeting) HasEventDescription() bool {
	if o != nil && o.EventDescription != nil {
		return true
	}

	return false
}

// SetEventDescription gets a reference to the given string and assigns it to the EventDescription field.
func (o *FDAComitteeMeeting) SetEventDescription(v string) {
	o.EventDescription = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *FDAComitteeMeeting) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FDAComitteeMeeting) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *FDAComitteeMeeting) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *FDAComitteeMeeting) SetUrl(v string) {
	o.Url = &v
}

func (o FDAComitteeMeeting) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FromDate != nil {
		toSerialize["fromDate"] = o.FromDate
	}
	if o.ToDate != nil {
		toSerialize["toDate"] = o.ToDate
	}
	if o.EventDescription != nil {
		toSerialize["eventDescription"] = o.EventDescription
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableFDAComitteeMeeting struct {
	value *FDAComitteeMeeting
	isSet bool
}

func (v NullableFDAComitteeMeeting) Get() *FDAComitteeMeeting {
	return v.value
}

func (v *NullableFDAComitteeMeeting) Set(val *FDAComitteeMeeting) {
	v.value = val
	v.isSet = true
}

func (v NullableFDAComitteeMeeting) IsSet() bool {
	return v.isSet
}

func (v *NullableFDAComitteeMeeting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFDAComitteeMeeting(val *FDAComitteeMeeting) *NullableFDAComitteeMeeting {
	return &NullableFDAComitteeMeeting{value: val, isSet: true}
}

func (v NullableFDAComitteeMeeting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFDAComitteeMeeting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


