/*
Finnhub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finnhub

import (
	"encoding/json"
)

// PriceTarget struct for PriceTarget
type PriceTarget struct {
	// Company symbol.
	Symbol *string `json:"symbol,omitempty"`
	// Highes analysts' target.
	TargetHigh *float32 `json:"targetHigh,omitempty"`
	// Lowest analysts' target.
	TargetLow *float32 `json:"targetLow,omitempty"`
	// Mean of all analysts' targets.
	TargetMean *float32 `json:"targetMean,omitempty"`
	// Median of all analysts' targets.
	TargetMedian *float32 `json:"targetMedian,omitempty"`
	// Updated time of the data
	LastUpdated *string `json:"lastUpdated,omitempty"`
}

// NewPriceTarget instantiates a new PriceTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceTarget() *PriceTarget {
	this := PriceTarget{}
	return &this
}

// NewPriceTargetWithDefaults instantiates a new PriceTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceTargetWithDefaults() *PriceTarget {
	this := PriceTarget{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *PriceTarget) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceTarget) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *PriceTarget) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *PriceTarget) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTargetHigh returns the TargetHigh field value if set, zero value otherwise.
func (o *PriceTarget) GetTargetHigh() float32 {
	if o == nil || o.TargetHigh == nil {
		var ret float32
		return ret
	}
	return *o.TargetHigh
}

// GetTargetHighOk returns a tuple with the TargetHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceTarget) GetTargetHighOk() (*float32, bool) {
	if o == nil || o.TargetHigh == nil {
		return nil, false
	}
	return o.TargetHigh, true
}

// HasTargetHigh returns a boolean if a field has been set.
func (o *PriceTarget) HasTargetHigh() bool {
	if o != nil && o.TargetHigh != nil {
		return true
	}

	return false
}

// SetTargetHigh gets a reference to the given float32 and assigns it to the TargetHigh field.
func (o *PriceTarget) SetTargetHigh(v float32) {
	o.TargetHigh = &v
}

// GetTargetLow returns the TargetLow field value if set, zero value otherwise.
func (o *PriceTarget) GetTargetLow() float32 {
	if o == nil || o.TargetLow == nil {
		var ret float32
		return ret
	}
	return *o.TargetLow
}

// GetTargetLowOk returns a tuple with the TargetLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceTarget) GetTargetLowOk() (*float32, bool) {
	if o == nil || o.TargetLow == nil {
		return nil, false
	}
	return o.TargetLow, true
}

// HasTargetLow returns a boolean if a field has been set.
func (o *PriceTarget) HasTargetLow() bool {
	if o != nil && o.TargetLow != nil {
		return true
	}

	return false
}

// SetTargetLow gets a reference to the given float32 and assigns it to the TargetLow field.
func (o *PriceTarget) SetTargetLow(v float32) {
	o.TargetLow = &v
}

// GetTargetMean returns the TargetMean field value if set, zero value otherwise.
func (o *PriceTarget) GetTargetMean() float32 {
	if o == nil || o.TargetMean == nil {
		var ret float32
		return ret
	}
	return *o.TargetMean
}

// GetTargetMeanOk returns a tuple with the TargetMean field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceTarget) GetTargetMeanOk() (*float32, bool) {
	if o == nil || o.TargetMean == nil {
		return nil, false
	}
	return o.TargetMean, true
}

// HasTargetMean returns a boolean if a field has been set.
func (o *PriceTarget) HasTargetMean() bool {
	if o != nil && o.TargetMean != nil {
		return true
	}

	return false
}

// SetTargetMean gets a reference to the given float32 and assigns it to the TargetMean field.
func (o *PriceTarget) SetTargetMean(v float32) {
	o.TargetMean = &v
}

// GetTargetMedian returns the TargetMedian field value if set, zero value otherwise.
func (o *PriceTarget) GetTargetMedian() float32 {
	if o == nil || o.TargetMedian == nil {
		var ret float32
		return ret
	}
	return *o.TargetMedian
}

// GetTargetMedianOk returns a tuple with the TargetMedian field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceTarget) GetTargetMedianOk() (*float32, bool) {
	if o == nil || o.TargetMedian == nil {
		return nil, false
	}
	return o.TargetMedian, true
}

// HasTargetMedian returns a boolean if a field has been set.
func (o *PriceTarget) HasTargetMedian() bool {
	if o != nil && o.TargetMedian != nil {
		return true
	}

	return false
}

// SetTargetMedian gets a reference to the given float32 and assigns it to the TargetMedian field.
func (o *PriceTarget) SetTargetMedian(v float32) {
	o.TargetMedian = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *PriceTarget) GetLastUpdated() string {
	if o == nil || o.LastUpdated == nil {
		var ret string
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceTarget) GetLastUpdatedOk() (*string, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *PriceTarget) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given string and assigns it to the LastUpdated field.
func (o *PriceTarget) SetLastUpdated(v string) {
	o.LastUpdated = &v
}

func (o PriceTarget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.TargetHigh != nil {
		toSerialize["targetHigh"] = o.TargetHigh
	}
	if o.TargetLow != nil {
		toSerialize["targetLow"] = o.TargetLow
	}
	if o.TargetMean != nil {
		toSerialize["targetMean"] = o.TargetMean
	}
	if o.TargetMedian != nil {
		toSerialize["targetMedian"] = o.TargetMedian
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return json.Marshal(toSerialize)
}

type NullablePriceTarget struct {
	value *PriceTarget
	isSet bool
}

func (v NullablePriceTarget) Get() *PriceTarget {
	return v.value
}

func (v *NullablePriceTarget) Set(val *PriceTarget) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceTarget) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceTarget(val *PriceTarget) *NullablePriceTarget {
	return &NullablePriceTarget{value: val, isSet: true}
}

func (v NullablePriceTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


